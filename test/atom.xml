<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>阮一峰的网络日志</title>
    <link rel="alternate" type="text/html" href="http://www.ruanyifeng.com/blog/" />
    <link rel="self" type="application/atom+xml" href="http://www.ruanyifeng.com/blog/atom.xml" />
    <id>tag:www.ruanyifeng.com,2010-04-11:/blog//1</id>
    <updated>2013-03-19T08:43:40Z</updated>
    <subtitle>Ruan YiFeng&apos;s Blog</subtitle>
    <generator uri="http://www.sixapart.com/movabletype/">Movable Type 5.2.2</generator>

<entry>
    <title>TF-IDF与余弦相似性的应用（一）：自动提取关键词</title>
    <link rel="alternate" type="text/html" href="http://www.ruanyifeng.com/blog/2013/03/tf-idf.html" />
    <id>tag:www.ruanyifeng.com,2013:/blog//1.1769</id>

    <published>2013-03-15T15:19:49Z</published>
    <updated>2013-03-19T08:43:40Z</updated>

    <summary>这个标题看上去好像很复杂，其实我要谈的是一个很简单的问题。...</summary>
    <author>
        <name>阮一峰</name>
        <uri>http://www.ruanyifeng.com</uri>
    </author>
    
        <category term="IT" scheme="http://www.sixapart.com/ns/types#category" />
    
    
    <content type="html" xml:lang="en" xml:base="http://www.ruanyifeng.com/blog/">
        <![CDATA[<p>这个标题看上去好像很复杂，其实我要谈的是一个很简单的问题。</p>]]>
        <![CDATA[<p>有一篇很长的文章，我要用计算机提取它的关键词（Automatic Keyphrase extraction），完全不加以人工干预，请问怎样才能正确做到？</p>

<p><img src="http://image.beekka.com/blog/201303/bg2013031501.jpg" /></p>

<p>这个问题涉及到数据挖掘、文本处理、信息检索等很多计算机前沿领域，但是出乎意料的是，有一个非常简单的经典算法，可以给出令人相当满意的结果。它简单到都不需要高等数学，普通人只用10分钟就可以理解，这就是我今天想要介绍的<a href="http://en.wikipedia.org/wiki/Tf%E2%80%93idf">TF-IDF</a>算法。</p>

<p>让我们从一个实例开始讲起。假定现在有一篇长文<strong>《中国的蜜蜂养殖》</strong>，我们准备用计算机提取它的关键词。</p>

<p><img src="http://image.beekka.com/blog/201303/bg2013031502.jpg" /></p>

<p>一个容易想到的思路，就是找到出现次数最多的词。如果某个词很重要，它应该在这篇文章中多次出现。于是，我们进行"词频"（Term Frequency，缩写为TF）统计。</p>

<p>结果你肯定猜到了，出现次数最多的词是----"的"、"是"、"在"----这一类最常用的词。它们叫做<a href="http://baike.baidu.com/view/3784680.htm">"停用词"</a>（stop words），表示对找到结果毫无帮助、必须过滤掉的词。</p>

<p>假设我们把它们都过滤掉了，只考虑剩下的有实际意义的词。这样又会遇到了另一个问题，我们可能发现"中国"、"蜜蜂"、"养殖"这三个词的出现次数一样多。这是不是意味着，作为关键词，它们的重要性是一样的？</p>

<p>显然不是这样。因为"中国"是很常见的词，相对而言，"蜜蜂"和"养殖"不那么常见。如果这三个词在一篇文章的出现次数一样多，有理由认为，"蜜蜂"和"养殖"的重要程度要大于"中国"，也就是说，在关键词排序上面，"蜜蜂"和"养殖"应该排在"中国"的前面。</p>

<p>所以，我们需要一个重要性调整系数，衡量一个词是不是常见词。<strong>如果某个词比较少见，但是它在这篇文章中多次出现，那么它很可能就反映了这篇文章的特性，正是我们所需要的关键词。</strong></p>

<p>用统计学语言表达，就是在词频的基础上，要对每个词分配一个"重要性"权重。最常见的词（"的"、"是"、"在"）给予最小的权重，较常见的词（"中国"）给予较小的权重，较少见的词（"蜜蜂"、"养殖"）给予较大的权重。这个权重叫做"逆文档频率"（Inverse Document Frequency，缩写为IDF），它的大小与一个词的常见程度成反比。</p>

<p><strong>知道了"词频"（TF）和"逆文档频率"（IDF）以后，将这两个值相乘，就得到了一个词的TF-IDF值。某个词对文章的重要性越高，它的TF-IDF值就越大。所以，排在最前面的几个词，就是这篇文章的关键词</strong>。</p>

<p>下面就是这个算法的细节。</p>

<p><strong>第一步，计算词频。</strong></p>

<p><img src="http://image.beekka.com/blog/201303/bg2013031503.png" style="border:none;" /></p>

<p>考虑到文章有长短之分，为了便于不同文章的比较，进行"词频"标准化。</p>

<p><img src="http://image.beekka.com/blog/201303/bg2013031504.png" style="border:none;" /></p>

<p>或者</p>

<p><img src="http://image.beekka.com/blog/201303/bg2013031505.png" style="border:none;" /></p>

<p><strong>第二步，计算逆文档频率。</strong></p>

<p>这时，需要一个语料库（corpus），用来模拟语言的使用环境。</p>

<p><img src="http://image.beekka.com/blog/201303/bg2013031506.png" style="border:none;" /></p>

<p>如果一个词越常见，那么分母就越大，逆文档频率就越小越接近0。分母之所以要加1，是为了避免分母为0（即所有文档都不包含该词）。log表示对得到的值取对数。</p>

<p><strong>第三步，计算TF-IDF。</strong></p>

<p><img src="http://image.beekka.com/blog/201303/bg2013031507.png" style="border:none;" /></p>

<p><strong>可以看到，TF-IDF与一个词在文档中的出现次数成正比，与该词在整个语言中的出现次数成反比。</strong>所以，自动提取关键词的算法就很清楚了，就是计算出文档的每个词的TF-IDF值，然后按降序排列，取排在最前面的几个词。</p>

<p>还是以《中国的蜜蜂养殖》为例，假定该文长度为1000个词，"中国"、"蜜蜂"、"养殖"各出现20次，则这三个词的"词频"（TF）都为0.02。然后，搜索Google发现，包含"的"字的网页共有250亿张，假定这就是中文网页总数。包含"中国"的网页共有62.3亿张，包含"蜜蜂"的网页为0.484亿张，包含"养殖"的网页为0.973亿张。则它们的逆文档频率（IDF）和TF-IDF如下：</p>

<p><img src="http://image.beekka.com/blog/201303/bg2013031508.png" style="border:none;" /></p>

<p>从上表可见，"蜜蜂"的TF-IDF值最高，"养殖"其次，"中国"最低。（如果还计算"的"字的TF-IDF，那将是一个极其接近0的值。）所以，如果只选择一个词，"蜜蜂"就是这篇文章的关键词。</p>

<p>除了自动提取关键词，TF-IDF算法还可以用于许多别的地方。比如，信息检索时，对于每个文档，都可以分别计算一组搜索词（"中国"、"蜜蜂"、"养殖"）的TF-IDF，将它们相加，就可以得到整个文档的TF-IDF。这个值最高的文档就是与搜索词最相关的文档。</p>

<p>TF-IDF算法的优点是简单快速，结果比较符合实际情况。缺点是，单纯以"词频"衡量一个词的重要性，不够全面，有时重要的词可能出现次数并不多。而且，这种算法无法体现词的位置信息，出现位置靠前的词与出现位置靠后的词，都被视为重要性相同，这是不正确的。</p>

<p>下一次，我将用TF-IDF结合余弦相似性，衡量文档之间的相似程度。</p>

<p>（完）<br />
</p>]]>
        <![CDATA[<div style="color:#556677;line-height:160%;padding:0.3em 0.5em;border:1px solid #d3d3d3;margin:1em;background-color:#AAD2F0;-moz-border-radius: 10px;-webkit-border-radius:10px;border-radius: 10px;"><h3>文档信息</h3>
<ul>
<li>版权声明：自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></li>
<li>原文网址：<a href="http://www.ruanyifeng.com/blog/2013/03/tf-idf.html">http://www.ruanyifeng.com/blog/2013/03/tf-idf.html</a></li>
<li>最后修改时间：2013年3月19日 16:43</li>
<li>付费支持：<a href="https://me.alipay.com/ruanyf" target="_blank"><img src="http://www.ruanyifeng.com/blog/images/rmb_32.png" title="人民币" alt="人民币 - 支付宝" style="border:none;vertical-align:middle;" /></a> | <a href="https://www.paypal.com/cgi-bin/webscr?cmd=_xclick&business=yifeng.ruan@gmail.com&currency_code=USD&amount=0.99&return=http://www.ruanyifeng.com/thank.html&item_name=Ruan%20YiFeng's%20Blog&undefined_quantity=1&no_note=0" target="_blank"><img src="http://www.ruanyifeng.com/blog/images/dollar_32.png"  alt="美元 - paypal" title="美元" style="border:none;vertical-align:middle;" /></a> </li>
</ul></div>]]>
        <![CDATA[<div style="color:#556677;line-height:160%;padding:0.3em 0.5em;margin:1em;-moz-border-radius: 10px;-webkit-border-radius:10px;border-radius: 10px;"><p><strong>[广告]</strong>　<a href="http://ushan.cn?utm_source=ruanyifeng.com" target="_blank" style="border:none;">优衫（Ushan）是国内顶尖的定制西服店，常年为众多政商名流、影视明星、跨国高管定制衬衫与西服。以工艺精良、用料考究、版型出色、性价比高等特点广受各界好评。</a>
</p>
</div>]]>
    </content>
</entry>

<entry>
    <title>苹果公司与分工原理</title>
    <link rel="alternate" type="text/html" href="http://www.ruanyifeng.com/blog/2013/03/apple_inc_and_division_of_labor.html" />
    <id>tag:www.ruanyifeng.com,2013:/blog//1.1768</id>

    <published>2013-03-08T06:32:00Z</published>
    <updated>2013-03-20T01:57:58Z</updated>

    <summary>我终于读完了《乔布斯传》。这是一本好书，我应该早点读的。...</summary>
    <author>
        <name>阮一峰</name>
        <uri>http://www.ruanyifeng.com</uri>
    </author>
    
        <category term="Books" scheme="http://www.sixapart.com/ns/types#category" />
    
    
    <content type="html" xml:lang="en" xml:base="http://www.ruanyifeng.com/blog/">
        <![CDATA[<p>我终于读完了<a href="http://en.wikipedia.org/wiki/Steve_Jobs_(book)">《乔布斯传》</a>。这是一本好书，我应该早点读的。</p>]]>
        <![CDATA[<p><img src="http://image.beekka.com/blog/201303/bg2013030801.jpg" /></p>

<p>最大的收获，就是理解了苹果公司为什么是现在的样子。</p>

<p><img src="http://image.beekka.com/blog/201303/bg2013030802.jpg" /></p>

<p>苹果公司与其他计算机公司截然不同，有着鲜明的风格。以前，我只是简单地认为，它就是这种特色，或者说它的产品策略和销售方法就是这样。读了《乔布斯传》才明白，这完全是由乔布斯的个性决定的。</p>

<p><strong>一、乔布斯</strong></p>

<p>1979年，苹果公司成立不久，乔布斯拍了一张著名的照片。</p>

<p><img src="http://image.beekka.com/blog/201303/bg2013030803.jpg" /></p>

<p>他一个人坐在新家的地板上，盘腿沉思。屋里几乎空无一物，人们都以为，这是为了制造照片效果。但是，《乔布斯传》披露，他的家真的就是这样。没有家俱，是因为乔布斯的要求太高，始终买不到合适的家俱。</p>

<blockquote>

<p>"乔布斯买了一间不错的房子，但家里只有一幅帕黎思（Maxfield Parrish）的画作、一部百灵牌咖啡机和几把双人牌的刀子。<strong>他对家俱挑剔到了极点，一直找不到合意的，屋子也就空空如也，没有床、椅子，也沒有沙发。</strong>他的卧室简单至极：中央有一张床垫，墙上挂了爱因斯坦和印度圣师玛哈拉的裱框相片，一部苹果II号计算机就摆在地上。"</p>

</blockquote>

<p>乔布斯的个性特点就是追求完美，而且极其坚持。</p>

<p><strong>二、追求完美</strong></p>

<p>这种个性完全体现在苹果公司的产品之中。<strong>苹果的产品在各方面都追求完美。</strong> 下面就是一些例子。</p>

<blockquote>

<p>（1）最早的时候，苹果公司只出售硬件（苹果I号和苹果II号）。为了不让其他公司的软件糟蹋自家的硬件，苹果很快就开发出了自家的操作系统。</p>

</blockquote>

<blockquote>

<p>（2）乔布斯"一想到完美的苹果软件在另一家公司出品的破烂电脑上面运行，就浑身不舒服。"所以，苹果的软件不授权给其他厂商，甚至也很少推出其他平台的版本。同样地，未经许可的软件，也不得在苹果的平台上运行。</p>

</blockquote>

<blockquote>

<p>（3）苹果鼠标只有一个键， iPod只有一个滚轮，iPhone和iPad只有一个Home键，因为这样的设计最完美，如果有两个键就不完美了。</p>

</blockquote>

<blockquote>

<p>（4）为了防止用户破坏苹果产品的完美，它们都是不能擅自拆开的，Macintosh电脑不能插入扩展卡，iPhone和iPod不能换电池，还使用了特制的螺丝。</p>

</blockquote>

<blockquote>

<p>（5）你不可能让所有部分都完美，最好的办法就是去除那些不完美的部分，所以苹果的产品总是很简洁。</p>

</blockquote>

<blockquote>

<p>（6）由于Flash格式可能会出现各种问题，不利于完美的用户体验，苹果宣布不支持Flash格式。</p>

</blockquote>

<blockquote>

<p>（7）苹果的产品非常注重细节，因为只要有一个细节出错，就称不上完美了。苹果的设计师曾经抱怨说，乔布斯让他们花太多时间在标题栏的设计上，害他们无法做更重要的事。乔布斯发火了，叫道："你们可以想像每天都得盯着这种标题栏的感觉吗？这不是芝麻蒜皮的事，是应该做好的事。"</p>

</blockquote>

<blockquote>

<p>（8）乔布斯甚至要求，电脑内部的电路板也要完美。</p>

</blockquote>

<p>他这样说：</p>

<blockquote>

<p>"即使电路板藏在电脑里面，看不到，我还是要电路板尽可能漂亮。一个好木工在钉橱子的时候，会用一块烂木头来做背板吗？尽管背板总是贴着墙壁，没人看得到，但你还是知道那块板子就在那里，最后你还是决定用一块好木板来钉。这样你才能高枕无忧，因为你已顾及美观和品质，做到尽善尽美了。"</p>

</blockquote>

<p><strong>三、控制一切</strong></p>

<p><strong>乔布斯如此追求完美，所以就希望掌握一切。</strong></p>

<p>只要有一个部分不是他说了算，他就难以忍受，感到无法保证这件产品能达到他心目中的完美标准。这就决定了苹果在业界绝无仅有的经营模式，它几乎是全世界对产品控制最强悍的公司。</p>

<blockquote>

<p>（1）苹果只出售硬件和软件整合为一体的产品，且从不把操作系统授权给其他厂商，以保证一切都在它的完全控制之中。</p>

</blockquote>

<blockquote>

<p>（2）为了保证用户在iPod中听到的是完美的音乐，苹果搭建了itunes音乐商店；为了保证用户在iPhone上用的是合格的软件，苹果搭建了App商店；为了保证用户在iPad上读到排版优美的好书，苹果搭建了iBooks书店。一句话，苹果还要控制内容，只有它审核过的东西，才能进入它的产品。</p>

</blockquote>

<blockquote>

<p>（3）由于Intel公司的处理器达不到乔布斯的要求，苹果开始自己生产A4处理器，将上游的电子原件都纳入自己的控制之中。</p>

</blockquote>

<blockquote>

<p>（4）为了保证消费者的购物体验，苹果开设了自家的专卖店，以便准确传达苹果产品的特质。乔布斯亲自参与设计了楼梯、桌子、布局、装潢等各个方面。苹果就这样控制了下游的零售部门。</p>

</blockquote>

<p>乔布斯认为，最好的产品就是"软件与硬件一体成型的产品"，每个细节都是根据"从头到尾"（end- to-end）的原则，从制造端（头）到使用者（尾）全程掌控，去设计打造出來的。他无法想象，把他一手创造出来的东西交给别人，自己无法控制。</p>

<p><strong>所以，苹果一家公司包办了整条产业链，从最上游的电子零件到最下游的零售网点，都是它的业务范围。无论硬件、软件、还是内容，都在它的控制之中。</strong></p>

<p><strong>四、分工原理</strong></p>

<p>但是，这样做违反了经济学的基本原理----分工。</p>

<p><img src="http://image.beekka.com/blog/201303/bg2013030804.jpg" /></p>

<p>1776年，"经济学之父"英国经济学家亚当·斯密，在《国富论》中举过一个经典的例子，证明分工能带来巨大的经济利益。</p>

<blockquote>

<p>"一根针的制造，涉及18种工序：一个人抽铁线，一个人拉直，一个人切截，一个人削尖线的一端，一个人磨另一端，以便装上圆头......我见过一个小工厂，只雇用10个工人，因此在这个工厂中，有几个工人同时担任二三种工序。如果他们勤勉工作，一日能制造12磅的针，以每磅4000枚针计，这10个工人每日就可成针48000枚，即一人一日可成针4800枚。如果他们各自独立工作，不专门从事一种工序，那么，他们不论是谁，绝对不能一日制造20枚针，说不定一天连一枚针也制造不出来。他们不但不能制出今日由适当分工合作而制成的数量的240分之一，就连这数量的4800分之一，恐怕也制造不出来。"</p>

</blockquote>

<p>历史已经证明了，分工是提高生产力的基本方法，可以大大提高效率、降低成本。</p>

<p><strong>苹果公司控制一切的做法，明显违反分工原理。这注定了它的成本不会低，因此苹果产品总是比同类产品贵很多。</strong></p>

<p><strong>五、苹果的成败</strong></p>

<p>既然苹果公司违反了分工原理，为什么它还能获得成功呢？</p>

<p>原因就是它的产品比对手的产品领先一大截，往往属于革命性的产品，引领了潮流。所以，即使价格非常贵，消费者还是愿意购买。从iPod到iBook，再到iPhone和iPad，都是如此。</p>

<p>这就是苹果的口号"think different"的背后真正含义：只有生产差异化产品，才能弥补高成本。</p>

<p><strong>但是，苹果这种违反分工原理的做法，有其内在弱点。一旦苹果产品无法大幅度领先对手，不能引领潮流，消费者就不会愿意支付高价。那样的话，苹果公司就会有麻烦，控制整条产业链的巨额成本将无法得到补偿。</strong></p>

<p>这就是目前正在发生的事。自从乔布斯去世后，苹果公司的新产品（包括iPad 3和4、iPhone 5、iPad mini）都是很优秀的产品，但不是革命性产品，与其他公司的产品的差距没有变大，反而正在变小。所以，<a href="http://pad.zol.com.cn/357/3576468.html">股价</a>出现了一路狂泻，华尔街担心消费者越来越不愿意为苹果产品支付额外的高价。</p>

<p>苹果真正需要推出的，不是iPhone和iPad的改进版，而是像<a href="http://www.google.com/glass/start/">Google Glass</a>和<a href="http://www.google.com/intl/en/chrome/devices/chromebook-pixel/">Chromebook Pixel</a>这样的完全意义上的新产品。</p>

<p>如果做不到，苹果就会遭到违反经济规律的报应，将不得不放弃对上下游的控制，以降低成本，并通过价格战，保住市场份额。</p>

<p>（完）<br />
</p>]]>
        <![CDATA[<div style="color:#556677;line-height:160%;padding:0.3em 0.5em;border:1px solid #d3d3d3;margin:1em;background-color:#AAD2F0;-moz-border-radius: 10px;-webkit-border-radius:10px;border-radius: 10px;"><h3>文档信息</h3>
<ul>
<li>版权声明：自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></li>
<li>原文网址：<a href="http://www.ruanyifeng.com/blog/2013/03/apple_inc_and_division_of_labor.html">http://www.ruanyifeng.com/blog/2013/03/apple_inc_and_division_of_labor.html</a></li>
<li>最后修改时间：2013年3月20日 09:57</li>
<li>付费支持：<a href="https://me.alipay.com/ruanyf" target="_blank"><img src="http://www.ruanyifeng.com/blog/images/rmb_32.png" title="人民币" alt="人民币 - 支付宝" style="border:none;vertical-align:middle;" /></a> | <a href="https://www.paypal.com/cgi-bin/webscr?cmd=_xclick&business=yifeng.ruan@gmail.com&currency_code=USD&amount=0.99&return=http://www.ruanyifeng.com/thank.html&item_name=Ruan%20YiFeng's%20Blog&undefined_quantity=1&no_note=0" target="_blank"><img src="http://www.ruanyifeng.com/blog/images/dollar_32.png"  alt="美元 - paypal" title="美元" style="border:none;vertical-align:middle;" /></a> </li>
</ul></div>]]>
        <![CDATA[<div style="color:#556677;line-height:160%;padding:0.3em 0.5em;margin:1em;-moz-border-radius: 10px;-webkit-border-radius:10px;border-radius: 10px;"><p><strong>[广告]</strong>　<a href="http://ushan.cn?utm_source=ruanyifeng.com" target="_blank" style="border:none;">优衫（Ushan）是国内顶尖的定制西服店，常年为众多政商名流、影视明星、跨国高管定制衬衫与西服。以工艺精良、用料考究、版型出色、性价比高等特点广受各界好评。</a>
</p>
</div>]]>
    </content>
</entry>

<entry>
    <title>《蒋介石与现代中国的奋斗》读后感</title>
    <link rel="alternate" type="text/html" href="http://www.ruanyifeng.com/blog/2013/02/chiang_kai-shek.html" />
    <id>tag:www.ruanyifeng.com,2013:/blog//1.1767</id>

    <published>2013-02-28T07:56:08Z</published>
    <updated>2013-03-19T05:18:01Z</updated>

    <summary>去年暑假，我读完了美国历史学家陶涵（Jay Taylor）的《蒋经国传》。这一周，又读完了他的后一部作品《蒋介石与现代中国的奋斗》。...</summary>
    <author>
        <name>阮一峰</name>
        <uri>http://www.ruanyifeng.com</uri>
    </author>
    
        <category term="History" scheme="http://www.sixapart.com/ns/types#category" />
    
    
    <content type="html" xml:lang="en" xml:base="http://www.ruanyifeng.com/blog/">
        <![CDATA[<p>去年暑假，我读完了美国历史学家<a href="http://baike.baidu.com.cn/view/2709132.htm">陶涵</a>（Jay Taylor）的<a href="http://www.ruanyifeng.com/blog/2012/07/chiang_ching-kuo.html">《蒋经国传》</a>。这一周，又读完了他的后一部作品<a href="http://www.readingtimes.com.tw/timeshtml/ad/1BY0048/index.htm">《蒋介石与现代中国的奋斗》</a>。</p>]]>
        <![CDATA[<p><img src="http://image.beekka.com/blog/201302/bg2013022801.jpg" /></p>

<p>我读的是台湾2010年的版本，但是该书已经于2012年由中信出版社引进了（书名改为《蒋介石与现代中国》）。</p>

<p><img src="http://image.beekka.com/blog/201302/bg2013022802.jpg" /></p>

<p>这本书能够在大陆出版（不管删节了多少字），是我们国家的一大进步。因为它全面地为蒋介石辩护，完全把蒋介石写成了一个正面人物，与官方的历史观截然相反。</p>

<p>当然，它不是那种歌功颂德式的文字，而是以各种历史资料为依据，试图做出尽可能客观的结论。请先看我做的笔记，该书对一些历史问题是怎么解释的。</p>

<p>=================================</p>

<p><strong>Q：为什么国民党内部从一开始就派系林立？</strong></p>

<p>北伐时期，蒋介石对投降的军阀来者不拒，把后续的政治问题留到以后再头痛。日后这将使他吃尽苦头，但在当时，他觉得自己别无他计。</p>

<p>另一方面，各路军阀佯称接受编遣，可是实际上牢牢控制自己的地盘不放。蒋介石觉悟到，他唯一的办法就是挑拨军阀互斗。</p>

<p><strong>Q：为什么中共能建立自己的武装？</strong></p>

<p>（1）蒋介石专注于北伐以及后来与军阀的冲突，无暇顾及中共；（2）军阀战争创造出成群游荡的逃兵溃卒，这些人极易被中共吸收；（3）国民党派系内讧消耗掉中央政府的力量，使中共在苏联金钱及武器的援助下有足够的时间去扩张。</p>

<p><strong>Q：为什么抗战初期，国军不用游击战打击日军？</strong></p>

<p>从一开始就打游击战或机动战，就长期而言或许是较好的策略，但中国初期可能会丢掉更多城市，而且必然会引发蒋介石避免与入侵者奋战的指控。</p>

<p><strong>Q：为什么抗战对中共有利，对国民党不利？</strong></p>

<p>1940年1月，周恩来给斯大林的秘密报告提到，中国有百万以上的士兵阵亡或受伤。他说，在这个数字当中，八路军伤亡仅有3万人、新四军则为1000人。对日作战大量消耗了蒋介石的兵力，而共产党则一直在积极扩充实力，苏联更是用各种手段支持共产党。</p>

<p><strong>Q：为什么发生皖南事变？</strong></p>

<p>项英领导的新四军违反国共协议，跑到长江北岸扩张地盘，日军打得少，国军打得多。屡次命令无效，蒋介石迫于无奈，下令歼灭新四军。</p>

<p><strong>Q：为什么美军司令史迪威看不起蒋介石？</strong></p>

<p>61岁的史迪威，4年前还只是个任职多年、没有实战经验的上校，现在却幻想成为中国实质上最有权力的人，僭取蒋介石之大位。他过度简化复杂的问题，低估中国人性格的复杂，在评断别人时严厉无情，甚至是恶毒的。在史迪威心目中，蒋根本没有价值、没有治国技能、没有将才、除了为个人集权，对中国的现代化和福祉毫无兴趣。</p>

<p><strong>Q：为什么国共在重庆无法达成和平协议？</strong></p>

<p>中共要求与国民党平等地位，且可以不受限制地在控制区内扩张或垄断政治权力。而国民党绝不接受与任何一个武装政党组成联合政府，要求中共的军队必须先编入政府军，然后再建立新政府。</p>

<p><strong>Q：为什么国民党发动内战？</strong></p>

<p>1946年1月18日，尽管规定国共双方停火，共军仍在东北抢占两座城市，其中之一是重要的港口营口。</p>

<p><strong>Q：为什么国民党无法在东北获胜？</strong></p>

<p>共产党在东北的兵力占优，控制了约90％的乡村地区，而且有苏联的支持，所以东北无法守住。</p>

<p><strong>Q：为什么国民党守不住华北？</strong></p>

<p>失去了东北，华北就没有了屏障，山东的港口也很快会失守。而且，国军在东北投入庞大兵力，全力求胜，导致没有力量在华北防卫。</p>

<p><strong>Q：为什么国民党没有早一点退回关内？</strong></p>

<p>多年之后，蒋说他未能早点退回关内，是因为"将领反对、民意、政治、经济、社会、与外交影响，尤其是东北与华北之民意代表请愿与哭诉，更使无法实行"。</p>

<p><strong>Q：为什么国民党失去民心？</strong></p>

<p>（1）发生恶性通货膨胀。法币的兑换价，从1945年8月的1500元法币兑换1美元，巨幅降到1948年1月的18万元法币兑换1美元。对外贸易已几乎停摆。（2）民间已意识到国民政府快要撑不下去了，大洪水将至，人人都想起码再抓住点什么，贪腐一发不可收拾。（3）那些保守的中国商人，在1945年仍是国民政府的死忠支持者，但是现在却感觉在中共清廉的集权统治下生活，相较之下，不会比国民党无能的贪污统治差。</p>

<p><strong>Q：为什么说蒋介石没有镇压学潮？</strong></p>

<p>警察打杀游行的学生后，蒋介石立刻退却，放弃"强硬"政策。他发表个人谈话，谴责警方的行动；当被捕学生的家长申请人身保护令时，他几乎把他们全都释放。此外，武汉卫戍司令部侦查队队长被发现在长江淹死，显然是自杀。</p>

<p><strong>Q：为什么蒋介石容忍国民党的严重腐败？</strong></p>

<p>认真矫正高级官员的腐败问题，恐怕会产生复杂的政治问题。蒋介石认为，革除腐败还可以继续搁置一段时间，等到真正的政治团结达成之后再来处理也不迟。</p>

<p><strong>Q：为什么蒋介石不进行改革？</strong></p>

<p>有一次，蒋介石告诉美国大使司徒雷登，他真的希望改革，但是不知如何着手。</p>

<p><strong>Q：为什么蒋介石不放过张学良和杨虎城？</strong></p>

<p>蒋介石逃离重庆的时候，下令枪决杨虎城父子、一个女儿、一个秘书及这个秘书的妻子。因为张学良让蒋介石误信，杨虎城是西安事变的主谋。蒋介石至死都相信若没发生西安事变，中国历史将会完全不同。</p>

<p><strong>Q：为什么国民党能在台湾站住脚跟？</strong></p>

<p>1949年夏季，国民党在台湾开展大规模土地改革，将日本人占据的土地，以低价卖给台湾贫农。同时，政府亦实施大幅减租。很快的，这些初步改革替国民党争取到台湾农民真正的政治支持，也替下一阶段的加强工作奠定了基础。这是国民党首次在农村地区赢得群众的支持。</p>

<p><strong>Q：为什么蒋介石信仰基督教不值得批评？</strong></p>

<p>这带来的问题绝对不比毛泽东拥抱外来意识形态带来的问题多。</p>

<p><strong>Q：为什么国民党在台湾的表现好于在大陆的表现？</strong></p>

<p>过去40年让蒋介石头痛的老军阀，到了台湾几乎都不再掌握部队，在党、政部门也完全没有权力。一度权势如日中天的宋氏家族，也都移居了美国。蒋介石终于第一次摆脱了国民党内的派系，对党政军有了完全的控制。</p>

<p>1959年，蒋介石在接见美国众议员周以德时说，从历史的角度来看，失去大陆或许是天意。在台湾的20年，使他有机会在不受中共的干扰下，向全世界展示，一个未开发国家真正迈向进步的正确途径。他说，在台湾的一切成绩，绝对无法在大陆完成，因为有来自中共的压力干扰。</p>

<p><strong>Q：蒋介石做错了什么？</strong></p>

<p>他对多党制的民主制度并不相信，对真诚和道德的信念也互相矛盾。他批准过非常可怕的极端行动，使大量的人民丧生。</p>

<p><strong>Q：蒋介石怎么评价自己？</strong></p>

<p>蒋介石从来没有替自己的极端行动辩解过。如果被逼问，他或许会指说这是时代的不幸，数百万人丧生、数亿人受苦，套用他的话：中国文明存亡绝续系于此一大战。当然，他的那些最无情的决定也帮助他掌握权位；对此，他可能会声称：他受民之托，必须竭尽所能，领导国家为生存和统一而奋斗。</p>

<p><strong>Q：我们应该怎么评价蒋介石？</strong></p>

<p>蒋介石在今人难以想像的艰困条件下，对付军阀，完成统一；内抗中共、外御日本。漫长的抗战，初期仰赖苏联援助，后期则仰承史迪威鼻息而勉强顶住大局。虽然丢失了大陆，但是最终为台湾的经济繁荣打下基础，在他的统治时期，台湾人的生活水平有了长足的提高。</p>

<p>=======================================</p>

<p>读完上面这些内容，我陷入了深深的困惑。</p>

<p>从小我受到的教育就是，蒋介石是一个镇压人民、贪污腐化、愚蠢无能、刚愎自用的独裁者。可是这本书却把蒋介石写成了一个为了民族利益，在困境中不懈奋斗、以妥协求发展的爱国者。到底哪一个才是真实的蒋介石？</p>

<p>我不敢下结论。各方出于自己的目的，都对历史进行歪曲和编造，我不知道信任谁。</p>

<p>历史学家<a href="http://www.ruanyifeng.com/blog/2012/05/ray_huang_s_memoir.html">黄仁宇</a>在回忆录中曾经说，他相信对蒋介石评价的最低点已经过去了，以后会逐步上升。而周恩来被美国记者问到，如何评价法国革命（French Revolution）时，曾经说过一句<a href="http://marginalrevolution.com/marginalrevolution/2011/06/it-is-too-soon-to-tell-the-real-story.html">有名的话</a>，"现在下结论还太早"（too early to say）。</p>

<p><img src="http://image.beekka.com/blog/201302/bg2013022803.jpg" /></p>

<p>好在蒋介石有写日记的习惯，他的1915年到1972年的日记，现在都保存在美国胡佛图书馆。等到日记完全公开出版的那一天，也许才是可以对他进行公正评价的时候。</p>

<p>（完）<br />
</p>]]>
        <![CDATA[<div style="color:#556677;line-height:160%;padding:0.3em 0.5em;border:1px solid #d3d3d3;margin:1em;background-color:#AAD2F0;-moz-border-radius: 10px;-webkit-border-radius:10px;border-radius: 10px;"><h3>文档信息</h3>
<ul>
<li>版权声明：自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></li>
<li>原文网址：<a href="http://www.ruanyifeng.com/blog/2013/02/chiang_kai-shek.html">http://www.ruanyifeng.com/blog/2013/02/chiang_kai-shek.html</a></li>
<li>最后修改时间：2013年3月19日 13:18</li>
<li>付费支持：<a href="https://me.alipay.com/ruanyf" target="_blank"><img src="http://www.ruanyifeng.com/blog/images/rmb_32.png" title="人民币" alt="人民币 - 支付宝" style="border:none;vertical-align:middle;" /></a> | <a href="https://www.paypal.com/cgi-bin/webscr?cmd=_xclick&business=yifeng.ruan@gmail.com&currency_code=USD&amount=0.99&return=http://www.ruanyifeng.com/thank.html&item_name=Ruan%20YiFeng's%20Blog&undefined_quantity=1&no_note=0" target="_blank"><img src="http://www.ruanyifeng.com/blog/images/dollar_32.png"  alt="美元 - paypal" title="美元" style="border:none;vertical-align:middle;" /></a> </li>
</ul></div>]]>
        <![CDATA[<div style="color:#556677;line-height:160%;padding:0.3em 0.5em;margin:1em;-moz-border-radius: 10px;-webkit-border-radius:10px;border-radius: 10px;"><p><strong>[广告]</strong>　<a href="http://ushan.cn?utm_source=ruanyifeng.com" target="_blank" style="border:none;">优衫（Ushan）是国内顶尖的定制西服店，常年为众多政商名流、影视明星、跨国高管定制衬衫与西服。以工艺精良、用料考究、版型出色、性价比高等特点广受各界好评。</a>
</p>
</div>]]>
    </content>
</entry>

<entry>
    <title>玉门人家照相馆</title>
    <link rel="alternate" type="text/html" href="http://www.ruanyifeng.com/blog/2013/02/yumen_photo_studio.html" />
    <id>tag:www.ruanyifeng.com,2013:/blog//1.1766</id>

    <published>2013-02-19T15:18:54Z</published>
    <updated>2013-03-19T05:21:15Z</updated>

    <summary>今天，我参观了第九届上海双年展。...</summary>
    <author>
        <name>阮一峰</name>
        <uri>http://www.ruanyifeng.com</uri>
    </author>
    
        <category term="Photography" scheme="http://www.sixapart.com/ns/types#category" />
    
    
    <content type="html" xml:lang="en" xml:base="http://www.ruanyifeng.com/blog/">
        <![CDATA[<p>今天，我参观了<a href="http://www.shanghaibiennale.org/">第九届上海双年展</a>。</p>]]>
        <![CDATA[<p><img src="http://image.beekka.com/blog/201302/bg2013021901.jpg" /></p>

<p>两件作品给我留下深刻印象，觉得它们体现了对生命的关怀和慈悲。</p>

<p>第一件作品是法国艺术家苏菲·卡尔的<a href="http://www.shanghaibiennale.org/exhibitor/calle-sophie-france/">《看海》</a>。她请一些天生的盲人来到海边，录下他们第一次看到大海的情景。</p>

<p><img src="http://image.beekka.com/blog/201302/bg2013021902.jpg" /></p>

<p>所有的人都面朝大海，静静地坐着，一言不发，只听海浪声此起彼伏，看得我深受感动。</p>

<p>第二件作品是中国艺术家庄辉、甘儿的<a href="http://zm.njnews.cn/html/2012-12/20/content_1366110.htm">《玉门人家照相馆》</a>。</p>

<p><img src="http://image.beekka.com/blog/201302/bg2013021903.jpg" /></p>

<p>作品的前言这样写道：</p>

<blockquote>

<p>　　"位于甘肃省境内祁连山西部的玉门油田，是中国第一个石油基地。这个因石油而生的城市，在经过60余年的短命开发后，又因石油资源的枯竭开始消亡。</p>

<p>　　玉门市在石油产业发展的鼎盛时期，城市人口达13万余人。随着石油资源的枯竭,截止2007年有9万多人迁出老市区，留守人员除石油生产工人外，绝大部分是无力搬迁的老弱病残和下岗失业人员。全市下岗失业人员已达3.5万人，其中生活特困群众达1.4万人，城市低保人员6000余人。</p>

<p>　　2006年夏天我和旦儿从嘉峪关转乘汽车来到玉门。当时恐慌和不安的情绪笼罩着整个城市，大部分的公共设施被废弃，居民楼也正在被整栋整栋地拆除。"</p>

<p><img src="http://image.beekka.com/blog/201302/bg2013021905.jpg" /></p>

<p><img src="http://image.beekka.com/blog/201302/bg2013021906.jpg" /></p>

<p><img src="http://image.beekka.com/blog/201302/bg2013021907.jpg" /></p>

<p><img src="http://image.beekka.com/blog/201302/bg2013021908.jpg" /></p>

<p><img src="http://image.beekka.com/blog/201302/bg2013021909.jpg" /></p>

</blockquote>

<p>于是，他们想到了一个极佳的创意。</p>

<blockquote>

<p>　　"玉门行将消失，我们记录它最后的表情。"</p>

</blockquote>

<p>他们开了一家照相馆，为期一年。</p>

<blockquote>

<p>　　"2008年1月， 选定位于玉门市北坪区关外关2楼，一座138平方米的房子，作为照相馆的营业场所。</p>

<p>　　2008年3月1日，聘请庄军为照相馆摄影师；5月23日同玉门佳利饮食服务有限公司签订门点租赁合同书；7月1日，聘请苏敬为照相馆经理兼化装师；7月6日照相馆聘请的摄影指导练东亚从北京到达玉门并投入工作。</p>

<p>　　2008年7月9日，照相馆正式营业，拍摄了第一份照片；7月14日照相馆申请营业执照，当地工商部门需要出具法人的婚育证明，由于庄辉户口所在地居委会不予办理相关手续，最终使用他人的身份证明得以领取营业执照。照相馆原定名为《玉门照相馆》，当地工商部门不予批准，后更名为《玉门人家照相馆》。</p>

<p>　　2008年7月23日，曹向兰应聘为照相馆电脑修图师。</p>

<p>　　2009年6月 30日照相馆结束营业。"</p>

</blockquote>

<p>这一年来照相馆拍下的照片，就组成了这件作品《玉门人家照相馆》。</p>

<p><img src="http://image.beekka.com/blog/201302/bg2013021904.jpg" /></p>

<p><img src="http://image.beekka.com/blog/201302/bg2013021910.jpg" /></p>

<p><img src="http://image.beekka.com/blog/201302/bg2013021911.jpg" /></p>

<p><img src="http://image.beekka.com/blog/201302/bg2013021912.jpg" /></p>

<p><img src="http://image.beekka.com/blog/201302/bg2013021913.jpg" /></p>

<p><img src="http://image.beekka.com/blog/201302/bg2013021914.jpg" /></p>

<p><img src="http://image.beekka.com/blog/201302/bg2013021915.jpg" /></p>

<p><img src="http://image.beekka.com/blog/201302/bg2013021916.jpg" /></p>

<p><img src="http://image.beekka.com/blog/201302/bg2013021917.jpg" /></p>

<p><img src="http://image.beekka.com/blog/201302/bg2013021918.jpg" /></p>

<p><img src="http://image.beekka.com/blog/201302/bg2013021919.jpg" /></p>

<p><img src="http://image.beekka.com/blog/201302/bg2013021920.jpg" /></p>

<p><img src="http://image.beekka.com/blog/201302/bg2013021921.jpg" /></p>

<p><img src="http://image.beekka.com/blog/201302/bg2013021922.jpg" /></p>

<p><img src="http://image.beekka.com/blog/201302/bg2013021923.jpg" /></p>

<p>我看着这些面孔，不由想到，如果这座城市没了，他们会怎样？恐怕大多数人都束手无策，只有听任命运安排了。可是，命运又会有什么好的安排呢？......枯竭的油田抹去的不仅仅是一座城市，还有无数人的一生。</p>

<p>德国哲学家海德格尔说过，人是被突然抛到这个世界上的，接着又会被抛离这个世界。更可悲的是，实际上没有人记得你来过。我想，《玉门人家照相馆》就是想为那些随着油田一起枯竭的生命，留下一些纪念。</p>

<p>===============================</p>

<p>附：</p>

<p><strong>甘肃省发展和改革委员会关于申请将玉门市列入全国第二批资源枯竭型城市的请示</strong></p>

<p>国家发展改革委：</p>

<p>玉门是中国石油工业的摇篮，"铁人"王进喜的故乡。玉门市依矿而建，因油而兴，是典型的石油资源型城市。半个多世纪以来，玉门市为新中国的建设和发展作出了特殊的贡献。1938年，玉门油田因抗战所需而开发建设，1939年玉门老君庙第一口油井出油，中国从此甩掉了 "无油国"的帽子。1939年至1949年，玉门油田累计生产原油52.4万吨,占同期全国石油总产量的90%以上，奠定了中国石油工业的基础。新中国成立至1957年，玉门油田有力支持了社会主义建设，为新中国的经济复苏注入了宝贵的"血液"。1957年"一五"计划结束时，玉门油田当年生产原油75万吨，并成为拥有地质勘探、钻井、采油、炼油、机械修配、科学研究等门类齐全的石油工业基地。从此，玉门油田无可替代地承担起了中国石油工业的大学校、大试验田、大科学研究院和出经验、出人才、出产品、出技术的"三大、四出"历史重任，先后支援了陕北、大庆、胜利、华北、中原、新疆、青海、宁夏、长庆、大港、辽河、江苏、滇黔、南海、北海等20个新油田的建设，尤其是在大庆、四川盆地、长庆、吐哈等油田会战中，玉门油田贡献了自己最精锐的技术力量、最精良的设备，先后向全国各个油田培养输送管理人员、技术骨干和职工12万人，支援各类设备4000多台（套），为新中国的石油工业乃至工业经济的发展作出了重大贡献。</p>

<p>玉门油田开发建设以来，不仅为国家经济建设作出了巨大的物质贡献，也创造了宝贵的精神财富。截止2007年，玉门油田累计开采石油3011万吨，加工原油3843万吨，向国家上缴税金120多亿元。同时，创造了影响中国工业战线伟大的"铁人精神"，先后培养了70多位省部级干部和5名中科院院士。朱德、邓小平、叶剑英、陈云、彭德怀、万里、习仲勋、胡耀邦、赵紫阳、周永康等相继到玉门视察，对玉门油田为中国工业作出的伟大历史贡献给予了充分肯定。</p>

<p>1955年国家在玉门油田所在地设立地级玉门市。1958年，为更好地保障、服务油田生产建设，原玉门县政府由玉门镇迁至玉门油田，并入玉门市。1959年玉门石油管理局成立，1961年玉门市与玉门石油管理局分设，玉门市改为县级市。2003年，分别经中油总公司和国家民政部批准，玉门油田生活基地东迁至酒泉市肃州区，玉门市政府驻地西迁至原玉门县政府驻地玉门镇。 </p>

<p>2000年以来，尽管玉门油田又勘探建设了青西油田，但资源枯竭的总体趋势没有改变，玉门油田成为目前全国开发最早、海拔最高、开采难度最大、企业规模最小、发展困难最多的石油企业，也形成了玉门地方发展中的巨大困难和问题。主要表现在以下几个方面：</p>

<p>一是石油资源枯竭，经济严重衰退。经过60多年开采，玉门油田产量逐年下降，由最高年份1959年的140.62万吨降至1998年的38万吨。截止2006年底，玉门油田保有资源储量仅为400万吨，原有的老君庙、鸭儿峡两个老油田，加之新开发的青西油田，目前原油年产量仅维持在70万吨左右。与之相配套的玉门炼油厂，现主要靠外购原油维持生产。由于石油资源的逐步枯竭，油田企业进行了多次改组改制和经营结构、布局结构的大幅度调整，对近半个世纪以来为服务石油企业而建立起来的地方行政系统、工商企业框架和社会服务体系造成了严重冲击。特别是1998年以来，地方政府围绕油田、服务油田而兴办的化工、轻工机械、石化下游开发等工业企业，糖酒、五金、饮服等配套的商贸服务企业绝大多数破产倒闭，原市属工商业体系全面崩溃。据统计，1996年全市有市属工业企业90家，经过1998年前后的破产重组，2000年仅有8户企业勉强维持经营。由于分流吐哈油田人员外迁和玉门油田生活基地搬迁，玉门市城市经济严重衰退萎缩，城市化率由上世纪九十年代的70%以上骤降至目前的35%左右，市属工业经济比重一直在6%－8%之间徘徊。</p>

<p>二是环境问题突出，自然灾害频发。玉门市地处祁连山北麓，市区平均海拔2500多米，含氧量为14.8％（与标准状态相比缺氧30％），自然条件十分严酷。由于市区的工矿区和生活区交错混杂，空气污染严重。此外，由于长期过度使用地表水，致使地下水位逐年下降，下游乡镇地下水补给不足，造成市区及周边地区生态环境迅速恶化。地表水受原油污水、工业废水以及城市污水的污染，水体中污染物种类多，化学有害物质严重超标，其中石油类超过国家标准的19倍，挥发酚超过标准高达231倍，属于劣五类水质。流经市区的石油河被列为甘肃省重点监测河流，是全省严重受污染河流之一。在油田勘探和开采开发过程中，对原有地貌地质和植被破坏大，水土流失和土地 荒漠化日趋严重，水土流失面积占总面积的81.4%，对周边生态环境的影响累计已达20多万亩。2002年和2006年发生的两次重大泥石流灾害，都造成了重大人员伤亡和财产损失。另外，玉门市地处祁连山地震断裂带，地震灾害频繁发生，被国务院确定为2000-2020年地震重点监视防御区。地震灾害和日益恶化的生态环境，对经济社会发展和居民生活造成严重威胁。</p>

<p>三是就业压力大，社会矛盾突出。玉门市在石油产业发展的鼎盛时期，城市人口达13万余人。随着石油资源的枯竭，玉门油田搬迁至土哈油田，玉门铁路分局搬迁至嘉峪关，玉门油田的辅助企业及职工生活基地搬迁到酒泉。截止2007年，9万多人迁出老市区，留守人员除石油生产工人外，绝大部分是无力搬迁的老弱病残和下岗失业人员。全市下岗失业人员已达3.5万人，其中生活特困群众达1.4万人，城市低保人员6000余人。此外，由于企业改制遗留问题未得到解决，下岗失业人员没有得到妥善安置，产生了一系列的社会矛盾和问题。近年来，企业下岗失业人员和困难群众大量赴省进京上访，涉及改制企业的治安案件呈上升趋势，严重影响了全市的社会稳定。</p>

<p>四是老城区服务功能迅速弱化，新城区基础设施建设滞后。为了石油工业的发展，玉门市在城市基础设施、教育、文化、卫生及粮油、副食品供应等方面投入了大量资金，构建了市局共享共用、较为完善的社会服务体系。但随着油田经营结构的调整，尤其是2002年玉门石油管理局将学校、医院及大部分三产服务机构搬迁至酒泉市肃州区，造成老市区共105处，65.8万平米的固定资产闲置。同时，城市道路、供暖、供水、供电等设施老化严重，大部分设施已不能正常运行，严重影响了居民群众的正常生活。加之市政府驻地迁址玉门镇后，由于未能得到国家的资金支持，近几年虽然负债建成了一些基础设施，但城市基础设施远未完善，教育卫生、文化体育、交通通讯等城市功能很不健全，服务体系尚未形成。</p>

<p>五是税收增长乏力，财政陷入困境。1950年至1980年，在玉门油田发展的兴盛时期，全市财政收入以年均32％的速度增长。1998年以来，由于玉门油田原油产量处于较低水平，地方税收连年持续下降。特别是2003年玉门油田搬迁后，玉门市直接流失税收3500余万元。同时，由于城市人口的迅速减少，三产服务业大幅萎缩，对地方财源造成了巨大损失，现每年平均减少地方税收1200万元。由于市政迁址等方面的原因，现玉门市各项债务已近10亿元，财政赤字达1400万元，每年财政支出缺口都在3000万元以上。自身财力状况仅能保吃饭，勉强维持运转，建设和发展的资金严重短缺，职工增资政策无法落实，社会保障资金缺口很大。</p>

<p>六是人才大量外流，发展严重受阻。随着油田生活基地和市政单位搬迁，玉门经济和社会结构发生了重大变化。近年来，玉门市教育、文化、卫生、经济等方面的专业技术及管理人才大量外流。老市区人居环境恶化，新市区城市功能不完善，引进新的专业技术及管理人才难度很大。据统计，自上世纪90年代末期以来，玉门市共流失各类专业技术人才、经营管理人员、生产技术工人共4077人。其中，教育245人，卫生294 人，文化体育132人，经济管理875人，技术工人2531人。由于专业技术人才严重不足，经济社会发展缺乏强有力的智力支持，对玉门市经济社会长远发展产生了很大影响。</p>

<p>2003年，玉门市被国家发展改革委《资源型城市经济结构转型》课题组从118个资源型城市中确定为60个典型资源型城市之一。2007年底，国务院下发了《关于促进资源型城市可持续发展的若干意见》（国发〔2007〕38号），2008年４月国家将包括白银市等12个资源型城市（地区）列为首批资源枯竭型经济转型城市，并支持和帮助其加快经济转型步伐，这为玉门摆脱发展困境，实现可持续发展提供了难得机遇。目前，玉门市在市政迁址等转型工作实践的基础上，正在编制"玉门资源型城市经济转型规划"，争取得到国家帮助和支持，成功实现经济转型。</p>

<p>鉴于玉门市正处于经济转型的特殊时期，面临的现实困难和问题十分突出，仅依靠自身能力很难有效解决，我省支持能力有限，恳请国家发展改革委充分考虑玉门市的特殊情况，将玉门市列入全国第二批资源枯竭型城市名单，帮助玉门市加快经济转型步伐。</p>

<p>妥否，请示。</p>

<p>二〇〇八年五月十九日</p>

<p>（完）</p>]]>
        <![CDATA[<div style="color:#556677;line-height:160%;padding:0.3em 0.5em;border:1px solid #d3d3d3;margin:1em;background-color:#AAD2F0;-moz-border-radius: 10px;-webkit-border-radius:10px;border-radius: 10px;"><h3>文档信息</h3>
<ul>
<li>版权声明：自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></li>
<li>原文网址：<a href="http://www.ruanyifeng.com/blog/2013/02/yumen_photo_studio.html">http://www.ruanyifeng.com/blog/2013/02/yumen_photo_studio.html</a></li>
<li>最后修改时间：2013年3月19日 13:21</li>
<li>付费支持：<a href="https://me.alipay.com/ruanyf" target="_blank"><img src="http://www.ruanyifeng.com/blog/images/rmb_32.png" title="人民币" alt="人民币 - 支付宝" style="border:none;vertical-align:middle;" /></a> | <a href="https://www.paypal.com/cgi-bin/webscr?cmd=_xclick&business=yifeng.ruan@gmail.com&currency_code=USD&amount=0.99&return=http://www.ruanyifeng.com/thank.html&item_name=Ruan%20YiFeng's%20Blog&undefined_quantity=1&no_note=0" target="_blank"><img src="http://www.ruanyifeng.com/blog/images/dollar_32.png"  alt="美元 - paypal" title="美元" style="border:none;vertical-align:middle;" /></a> </li>
</ul></div>]]>
        <![CDATA[<div style="color:#556677;line-height:160%;padding:0.3em 0.5em;margin:1em;-moz-border-radius: 10px;-webkit-border-radius:10px;border-radius: 10px;"><p><strong>[广告]</strong>　<a href="http://ushan.cn?utm_source=ruanyifeng.com" target="_blank" style="border:none;">优衫（Ushan）是国内顶尖的定制西服店，常年为众多政商名流、影视明星、跨国高管定制衬衫与西服。以工艺精良、用料考究、版型出色、性价比高等特点广受各界好评。</a>
</p>
</div>]]>
    </content>
</entry>

<entry>
    <title>计算机是如何启动的？</title>
    <link rel="alternate" type="text/html" href="http://www.ruanyifeng.com/blog/2013/02/booting.html" />
    <id>tag:www.ruanyifeng.com,2013:/blog//1.1765</id>

    <published>2013-02-16T05:03:38Z</published>
    <updated>2013-03-17T03:53:43Z</updated>

    <summary>从打开电源到开始操作，计算机的启动是一个非常复杂的过程。...</summary>
    <author>
        <name>阮一峰</name>
        <uri>http://www.ruanyifeng.com</uri>
    </author>
    
        <category term="IT" scheme="http://www.sixapart.com/ns/types#category" />
    
    
    <content type="html" xml:lang="en" xml:base="http://www.ruanyifeng.com/blog/">
        <![CDATA[<p>从打开电源到开始操作，计算机的启动是一个非常复杂的过程。</p>]]>
        <![CDATA[<p><img src="http://image.beekka.com/blog/201302/bg2013021501.jpg" /></p>

<p>我一直搞不清楚，这个过程到底是怎么回事，只看见屏幕快速滚动各种提示...... 这几天，我查了一些资料，试图搞懂它。下面就是我整理的笔记。</p>

<p><strong>零、boot的含义</strong></p>

<p>先问一个问题，"启动"用英语怎么说？</p>

<p>回答是boot。可是，boot原来的意思是靴子，"启动"与靴子有什么关系呢？ 原来，这里的boot是bootstrap（鞋带）的缩写，它来自一句谚语：</p>

<blockquote>

<p>　　"pull oneself up by one's bootstraps"</p>

</blockquote>

<p>字面意思是"拽着鞋带把自己拉起来"，这当然是不可能的事情。最早的时候，工程师们用它来比喻，计算机启动是一个很矛盾的过程：必须先运行程序，然后计算机才能启动，但是计算机不启动就无法运行程序！</p>

<p>早期真的是这样，必须想尽各种办法，把一小段程序装进内存，然后计算机才能正常运行。所以，工程师们把这个过程叫做"拉鞋带"，久而久之就简称为boot了。</p>

<p>计算机的整个启动过程分成四个阶段。</p>

<p><strong>一、第一阶段：BIOS</strong></p>

<p>上个世纪70年代初，"只读内存"（read-only memory，缩写为ROM）发明，开机程序被刷入ROM芯片，计算机通电后，第一件事就是读取它。</p>

<p><img src="http://image.beekka.com/blog/201302/bg2013021502.jpg" /></p>

<p>这块芯片里的程序叫做"基本輸出輸入系統"（Basic Input/Output System），简称为<a href="http://en.wikipedia.org/wiki/BIOS">BIOS</a>。</p>

<p><strong>1.1 硬件自检</strong></p>

<p>BIOS程序首先检查，计算机硬件能否满足运行的基本条件，这叫做"硬件自检"（Power-On Self-Test），缩写为<a href="http://en.wikipedia.org/wiki/Power-on_self-test">POST</a>。</p>

<p>如果硬件出现问题，主板会发出不同含义的<a href="http://en.wikipedia.org/wiki/Power-on_self-test#Original_IBM_POST_beep_codes">蜂鸣</a>，启动中止。如果没有问题，屏幕就会显示出CPU、内存、硬盘等信息。</p>

<p><img src="http://image.beekka.com/blog/201302/bg2013021503.png" /></p>

<p><strong>1.2 启动顺序</strong></p>

<p>硬件自检完成后，BIOS把控制权转交给下一阶段的启动程序。</p>

<p>这时，BIOS需要知道，"下一阶段的启动程序"具体存放在哪一个设备。也就是说，BIOS需要有一个外部储存设备的排序，排在前面的设备就是优先转交控制权的设备。这种排序叫做"启动顺序"（Boot Sequence）。</p>

<p>打开BIOS的操作界面，里面有一项就是"设定启动顺序"。</p>

<p><img src="http://image.beekka.com/blog/201302/bg2013021504.jpg" /></p>

<p><strong>二、第二阶段：主引导记录</strong></p>

<p>BIOS按照"启动顺序"，把控制权转交给排在第一位的储存设备。</p>

<p>这时，计算机读取该设备的第一个扇区，也就是读取最前面的512个字节。如果这512个字节的最后两个字节是0x55和0xAA，表明这个设备可以用于启动；如果不是，表明设备不能用于启动，控制权于是被转交给"启动顺序"中的下一个设备。</p>

<p>这最前面的512个字节，就叫做<a href="http://en.wikipedia.org/wiki/Master_boot_record">"主引导记录"</a>（Master boot record，缩写为MBR）。</p>

<p><strong>2.1 主引导记录的结构</strong></p>

<p>"主引导记录"只有512个字节，放不了太多东西。它的主要作用是，告诉计算机到硬盘的哪一个位置去找操作系统。</p>

<p>主引导记录由三个部分组成：</p>

<blockquote>

<p>　　（1） 第1-446字节：调用操作系统的机器码。</p>

<p>　　（2） 第447-510字节：分区表（Partition table）。</p>

<p>　　（3） 第511-512字节：主引导记录签名（0x55和0xAA）。</p>

</blockquote>

<p>其中，第二部分"分区表"的作用，是将硬盘分成若干个区。</p>

<p><strong>2.2 分区表</strong></p>

<p>硬盘分区有很多<a href="http://en.wikipedia.org/wiki/Disk_partitioning#Benefits_of_multiple_partitions">好处</a>。考虑到每个区可以安装不同的操作系统，"主引导记录"因此必须知道将控制权转交给哪个区。</p>

<p>分区表的长度只有64个字节，里面又分成四项，每项16个字节。所以，一个硬盘最多只能分四个一级分区，又叫做"主分区"。</p>

<p>每个主分区的16个字节，由6个部分组成：</p>

<blockquote>

<p>　　（1） 第1个字节：如果为0x80，就表示该主分区是激活分区，控制权要转交给这个分区。四个主分区里面只能有一个是激活的。</p>

<p>　　（2） 第2-4个字节：主分区第一个扇区的物理位置（柱面、磁头、扇区号等等）。</p>

<p>　　（3） 第5个字节：<a href="http://en.wikipedia.org/wiki/Partition_type">主分区类型</a>。</p>

<p>　　（4） 第6-8个字节：主分区最后一个扇区的物理位置。</p>

<p>　　（5） 第9-12字节：该主分区第一个扇区的逻辑地址。</p>

<p>　　（6） 第13-16字节：主分区的扇区总数。</p>

</blockquote>

<p>最后的四个字节（"主分区的扇区总数"），决定了这个主分区的长度。也就是说，一个主分区的扇区总数最多不超过2的32次方。</p>

<p>如果每个扇区为512个字节，就意味着单个分区最大不超过2TB。再考虑到扇区的逻辑地址也是32位，所以单个硬盘可利用的空间最大也不超过2TB。如果想使用更大的硬盘，只有2个方法：一是提高每个扇区的字节数，二是<a href="http://en.wikipedia.org/wiki/GUID_Partition_Table">增加扇区总数</a>。</p>

<p><strong>三、第三阶段：硬盘启动</strong></p>

<p>这时，计算机的控制权就要转交给硬盘的某个分区了，这里又分成三种情况。</p>

<p><strong>3.1 情况A：卷引导记录</strong></p>

<p>上一节提到，四个主分区里面，只有一个是激活的。计算机会读取激活分区的第一个扇区，叫做<a href="http://en.wikipedia.org/wiki/Volume_Boot_Record">"卷引导记录</a>"（Volume boot record，缩写为VBR）。</p>

<p>"卷引导记录"的主要作用是，告诉计算机，操作系统在这个分区里的位置。然后，计算机就会加载操作系统了。</p>

<p><strong>3.2 情况B：扩展分区和逻辑分区</strong></p>

<p>随着硬盘越来越大，四个主分区已经不够了，需要更多的分区。但是，分区表只有四项，因此规定有且仅有一个区可以被定义成"扩展分区"（Extended partition）。</p>

<p>所谓"扩展分区"，就是指这个区里面又分成多个区。这种分区里面的分区，就叫做"逻辑分区"（logical partition）。</p>

<p>计算机先读取扩展分区的第一个扇区，叫做<a href="http://en.wikipedia.org/wiki/Extended_partition">"扩展引导记录"</a>（Extended boot record，缩写为EBR）。它里面也包含一张64字节的分区表，但是最多只有两项（也就是两个逻辑分区）。</p>

<p>计算机接着读取第二个逻辑分区的第一个扇区，再从里面的分区表中找到第三个逻辑分区的位置，以此类推，直到某个逻辑分区的分区表只包含它自身为止（即只有一个分区项）。因此，扩展分区可以包含无数个逻辑分区。</p>

<p>但是，似乎很少通过这种方式启动操作系统。如果操作系统确实安装在扩展分区，一般采用下一种方式启动。</p>

<p><strong>3.3 情况C：启动管理器</strong></p>

<p>在这种情况下，计算机读取"主引导记录"前面446字节的机器码之后，不再把控制权转交给某一个分区，而是运行事先安装的<a href="http://en.wikipedia.org/wiki/Boot_loader#Modern_boot_loaders">"启动管理器"</a>（boot loader），由用户选择启动哪一个操作系统。</p>

<p>Linux环境中，目前最流行的启动管理器是<a href="http://en.wikipedia.org/wiki/GNU_GRUB">Grub</a>。</p>

<p><img src="http://image.beekka.com/blog/201302/bg2013021505.png" /></p>

<p><strong>四、第四阶段：操作系统</strong></p>

<p>控制权转交给操作系统后，操作系统的内核首先被载入内存。</p>

<p>以Linux系统为例，先载入/boot目录下面的kernel。内核加载成功后，第一个运行的程序是/sbin/init。它根据配置文件（Debian系统是/etc/initab）产生init进程。这是Linux启动后的第一个进程，pid进程编号为1，其他进程都是它的后代。</p>

<p>然后，init线程加载系统的各个模块，比如窗口程序和网络程序，直至执行/bin/login程序，跳出登录界面，等待用户输入用户名和密码。</p>

<p>至此，全部启动过程完成。</p>

<p>（完）<br />
</p>]]>
        <![CDATA[<div style="color:#556677;line-height:160%;padding:0.3em 0.5em;border:1px solid #d3d3d3;margin:1em;background-color:#AAD2F0;-moz-border-radius: 10px;-webkit-border-radius:10px;border-radius: 10px;"><h3>文档信息</h3>
<ul>
<li>版权声明：自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></li>
<li>原文网址：<a href="http://www.ruanyifeng.com/blog/2013/02/booting.html">http://www.ruanyifeng.com/blog/2013/02/booting.html</a></li>
<li>最后修改时间：2013年3月17日 11:53</li>
<li>付费支持：<a href="https://me.alipay.com/ruanyf" target="_blank"><img src="http://www.ruanyifeng.com/blog/images/rmb_32.png" title="人民币" alt="人民币 - 支付宝" style="border:none;vertical-align:middle;" /></a> | <a href="https://www.paypal.com/cgi-bin/webscr?cmd=_xclick&business=yifeng.ruan@gmail.com&currency_code=USD&amount=0.99&return=http://www.ruanyifeng.com/thank.html&item_name=Ruan%20YiFeng's%20Blog&undefined_quantity=1&no_note=0" target="_blank"><img src="http://www.ruanyifeng.com/blog/images/dollar_32.png"  alt="美元 - paypal" title="美元" style="border:none;vertical-align:middle;" /></a> </li>
</ul></div>]]>
        <![CDATA[<div style="color:#556677;line-height:160%;padding:0.3em 0.5em;margin:1em;-moz-border-radius: 10px;-webkit-border-radius:10px;border-radius: 10px;"><p><strong>[广告]</strong>　<a href="http://ushan.cn?utm_source=ruanyifeng.com" target="_blank" style="border:none;">优衫（Ushan）是国内顶尖的定制西服店，常年为众多政商名流、影视明星、跨国高管定制衬衫与西服。以工艺精良、用料考究、版型出色、性价比高等特点广受各界好评。</a>
</p>
</div>]]>
    </content>
</entry>

<entry>
    <title>纪录片《TPB AFK》与现行版权制度</title>
    <link rel="alternate" type="text/html" href="http://www.ruanyifeng.com/blog/2013/02/tpb.html" />
    <id>tag:www.ruanyifeng.com,2013:/blog//1.1764</id>

    <published>2013-02-11T05:06:17Z</published>
    <updated>2013-03-18T02:19:30Z</updated>

    <summary>1. 二天前（2月8日），纪录片《TPB AFK》在柏林电影节首映，同时开放下载（地址1，地址2）。...</summary>
    <author>
        <name>阮一峰</name>
        <uri>http://www.ruanyifeng.com</uri>
    </author>
    
        <category term="Copyright" scheme="http://www.sixapart.com/ns/types#category" />
    
    
    <content type="html" xml:lang="en" xml:base="http://www.ruanyifeng.com/blog/">
        <![CDATA[<p>1.</p>

<p>二天前（2月8日），纪录片<a href="http://tpbafk.tv/">《TPB AFK》</a>在柏林电影节首映，同时开放下载（<a href="http://pirateproxy.net/user/SimonKlose/">地址1</a>，<a href="https://thepiratebay.se/user/SimonKlose/">地址2</a>）。</p>]]>
        <![CDATA[<p>这部纪录片讲述了瑞典政府<a href="http://en.wikipedia.org/wiki/TPB_trial">起诉</a>全球最大文件分享网站<a href="http://thepiratebay.se">"海盗湾"</a>（The Pirate Bay，简称TPB）的故事。纪录片编导从2008年开始跟拍，直到五年后的今天才完成全片。</p>

<p><img src="http://image.beekka.com/blog/201302/bg2013021101.png" /></p>

<p>2.</p>

<p>好莱坞将"海盗湾"视为眼中钉肉中刺，全力围剿，欲除之而后快。先是查封服务器，接着是切断网络连接，最后将4名创始人送上刑事法庭。去年2月，瑞典最高法院驳回海盗湾上诉，维持原判，4名被告全部有罪，必须入狱服刑，并且处以660万美元罚款。</p>

<p>纪录片《TPB AFK》全程跟拍，访问被告和律师，并且进入了海盗湾的机房，还赶赴老挝，记录两个当事人听到上诉驳回的那一刻。如果你想了解"海盗湾"背后的故事，这部纪录片是必看的。</p>

<p><img src="http://image.beekka.com/blog/201302/bg2013021102.jpg" /></p>

<p>片名中的AFK是away from keyboard的缩写，直译就是"离开键盘"，也就是网络之外的现实生活的意思。整个片名可以译成《现实中的海盗湾》。</p>

<p><img src="http://image.beekka.com/blog/201302/bg2013021104.jpg" /><br />
<img src="http://image.beekka.com/blog/201302/bg2013021105.jpg" /><br />
<img src="http://image.beekka.com/blog/201302/bg2013021106.jpg" /><br />
<img src="http://image.beekka.com/blog/201302/bg2013021107.jpg" /><br />
<img src="http://image.beekka.com/blog/201302/bg2013021108.jpg" /><br />
<img src="http://image.beekka.com/blog/201302/bg2013021109.jpg" /><br />
<img src="http://image.beekka.com/blog/201302/bg2013021110.jpg" /><br />
<img src="http://image.beekka.com/blog/201302/bg2013021111.jpg" /><br />
<img src="http://image.beekka.com/blog/201302/bg2013021112.jpg" /><br />
<img src="http://image.beekka.com/blog/201302/bg2013021113.jpg" /><br />
<img src="http://image.beekka.com/blog/201302/bg2013021114.jpg" /></p>

<p>制作人Simon Klose是站在海盗湾一边的。为了声援海盗湾，他宣布，这部纪录片采用<a href="http://www.tpbafk.tv/2013/01/why-i-chose-creative-commons-for-tpb-afk/">创意共享许可证</a>。你可以自由地下载、拷贝、分发、再创作，但是不能用于盈利活动。正版DVD的价格是23美元，包含一些花絮和被剪掉的片段。</p>

<p>3.</p>

<p>一谈到"海盗湾"，就免不了要谈到盗版问题。到底应该如何看待海盗湾？有必要为这些"盗版分子"唱赞歌吗？</p>

<p>下面说说我的一些想法。</p>

<p><img src="http://image.beekka.com/blog/201302/bg2013021103.jpg" /></p>

<p>首先，我要声明，我不支持盗版，完全认同创造者（creator）应该有回报。如果世界上大部分金钱都分配给创造者，而不是分配给银行家、证券商、地产商、贪腐的公务员，我们这个世界会美好得多。</p>

<p>但是，现行版权制度在打击盗版的同时，是不是真正促进了创造？是不是真正符合全人类的利益？</p>

<p>4.</p>

<p><strong>这样说吧，现行版权制度是一种有缺陷的制度。它有很强的排他性，严格禁止分享。与其说它保护了创造者，不如说它保护了利润。</strong></p>

<p>假设你读到一篇好文章，里面有你认为很有用的知识，会让很多人受益。你想把它放上网，让大家都看到。但是，现行版权制度禁止你这样做，因为会侵犯版权。法律规定，你无权与他人"分享"你不拥有版权的东西。</p>

<p>考虑到世界上绝大部分东西的版权都不属于你，因此你很可能没有任何东西可以与他人分享，他人也同样没有什么东西可以与你分享。我们大家想要获得一点新东西，只有一条途径，那就是每个人都花钱去买一次。</p>

<p>我知道有人会说，这样的制度没什么不合理。但是，在获得收入的同时，是否一定要排斥分享？版权制度是否一定要设计成排他性呢？</p>

<p>让我们想象还有另一种制度。在新制度下，每个人都有权分享自己觉得值得分享的东西，不需要获得版权人的同意，唯一的条件是不能用于盈利目的。这样一来，优秀的东西会得到大量传播，获取知识的成本大大降低，公众利益显著增长；而盈利目的使用则需要支付版权费，这样保证了创造者可以拿到收入。这就是"海盗湾"想要建立的模式。</p>

<p>这样的模式是否可取，可以进一步讨论。<strong>但是有一点应该要明确，那就是版权制度的根本目的，应该是鼓励创造，而不应该成为一种利润保护机制，更不应该成为一种控制知识的手段。</strong>考虑到信息分享成本已经如此之低，而信息分享的社会效益可能远大于版权利益，就更是如此了。</p>

<p>5.</p>

<p>未来的版权制度，会明确区分"分享"和"盗版"。它们是两个概念，不应混为一谈。<strong>"分享"不是为了获得个人利益，而"盗版"是的。真正要打击的是"盗版"，而不是"分享"。</strong></p>

<p>还有一种常见的说法是，如果你使用了盗版产品，就等同于偷窃他人财产。我认为，这种说法是不合适的。因为使用盗版，对于版权人来说，只是意味着可能会减少潜在利润，实际上并没有发生现有财产的损失，这和盗窃是不一样的。</p>

<p>而且由于我下面要说到的原因，我认为像防贼一样防范盗版，是一种商业上很不明智的行为。</p>

<p>6.</p>

<p>默许盗版产品传播，实际上是一种很先进、很强大的商业模式。如果真的是优秀作品，出现大量盗版，版权人不会有损失，只会有收益。因为赚更多钱的前提条件是，必须让作品传播出去，让更多的人看到它。</p>

<p>去年红遍全球的韩国歌曲《Gangnam Style》，就是采用这种策略。我把歌放上Youtube，随便你观看、下载、播放和翻拍，不用向我支付一分钱，你怎么盗版都可以。结果，这首歌单单在Youtube就一年播放10亿次。按照某种说法，这是不是意味着韩国歌手PSY被盗窃了10亿次？他岂不起要穷死了？</p>

<p>再举一个例子，电子游戏《Minecraft》从一诞生就默认允许盗版。欢迎你购买我们的正版，但是如果你没钱，就用盗版吧，先玩起来再说。收入固然重要，但更重要的是，我需要玩家！结果，去年它的累计总销量超过了<a href="http://cnbeta.com/articles/224987.htm">2000万份</a>，一个29人的小公司，创造了2.35亿美元的营收。</p>

<p>时代不一样了，免费的东西随处可得，任何人都可以创造内容，放上互联网，你却还把自己的东西藏起来，不让别人看。你真以为这样会赚到钱？如果有10亿人听过你的歌，2000万人玩过你的游戏，你还愁赚不到钱吗？</p>

<p>6.</p>

<p>你知道吗？现行的版权制度确立于二战前，在1952年升格为<a href="http://zh.wikipedia.org/wiki/%E4%B8%96%E7%95%8C%E7%89%88%E6%9D%83%E5%85%AC%E7%BA%A6">《世界版权公约》</a>。</p>

<p>你没有看错，真的是1952年。那时，彩色电视机还处于实验室阶段，更不要说电脑了。1952年的电子产品，现在没人要用，只能进博物馆。可是，1952年的法律还在束缚着我们传播信息。</p>

<p>更让人难以接受的是，这个法律日后又被不断强化，越来越趋向保护版权持有人的利益，使用者的权利被剥夺殆尽。你一定见过<a href="http://baike.baidu.com/view/2202726.htm">"保留所有权利"</a>（All Rights Reserved）这句话，它真的是字面的意思，就是"所有权利被保留"。使用者除了直接付费消费，真的是其他什么事情都不能做。这样对吗？</p>

<p>现行的版权制度必须改革。</p>

<p>7.</p>

<p>"海盗湾"的三个创始人，现在一个在牢里，一个等着坐牢，还有一个躲在老挝避难。</p>

<p>这是不是意味着，以好莱坞为代表的现行版权制度获胜了？</p>

<p>不是。因为"海盗湾"这个网站还存在着，依然是世界头号文件分享网站，一天都没有关闭过。虽然期间由于各种外来因素多次短暂下线，但是每一次都顽强地回来了。他们的口号就是："你们关不掉我们，24小时之内一定重新上线。"</p>

<p>让我用<a href="http://news.ycombinator.com/item?id=5189973">Hacker News</a>的一条读者评论，作为本文的结尾：</p>

<blockquote>

<p>"你可能会说，这是在美化犯罪分子。但是请记住，南北战争时美国南方那些为废除奴隶制奔走的人们，或者二战后南非那些为废除种族隔离制度抗争的人们，都曾经被当作犯罪分子，受到严厉惩罚。</p>

<p>是的，他们违反了法律。但是如果我们希望改变不合理的制度，我们就有责任站出来，大声说出我们的想法。在不久的将来，还会有很多人去坐牢，以及面对巨额罚金，但是重大变革都是以这种方式实现的。"</p>

</blockquote>

<p>（完）<br />
</p>]]>
        <![CDATA[<div style="color:#556677;line-height:160%;padding:0.3em 0.5em;border:1px solid #d3d3d3;margin:1em;background-color:#AAD2F0;-moz-border-radius: 10px;-webkit-border-radius:10px;border-radius: 10px;"><h3>文档信息</h3>
<ul>
<li>版权声明：自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></li>
<li>原文网址：<a href="http://www.ruanyifeng.com/blog/2013/02/tpb.html">http://www.ruanyifeng.com/blog/2013/02/tpb.html</a></li>
<li>最后修改时间：2013年3月18日 10:19</li>
<li>付费支持：<a href="https://me.alipay.com/ruanyf" target="_blank"><img src="http://www.ruanyifeng.com/blog/images/rmb_32.png" title="人民币" alt="人民币 - 支付宝" style="border:none;vertical-align:middle;" /></a> | <a href="https://www.paypal.com/cgi-bin/webscr?cmd=_xclick&business=yifeng.ruan@gmail.com&currency_code=USD&amount=0.99&return=http://www.ruanyifeng.com/thank.html&item_name=Ruan%20YiFeng's%20Blog&undefined_quantity=1&no_note=0" target="_blank"><img src="http://www.ruanyifeng.com/blog/images/dollar_32.png"  alt="美元 - paypal" title="美元" style="border:none;vertical-align:middle;" /></a> </li>
</ul></div>]]>
        <![CDATA[<div style="color:#556677;line-height:160%;padding:0.3em 0.5em;margin:1em;-moz-border-radius: 10px;-webkit-border-radius:10px;border-radius: 10px;"><p><strong>[广告]</strong>　<a href="http://ushan.cn?utm_source=ruanyifeng.com" target="_blank" style="border:none;">优衫（Ushan）是国内顶尖的定制西服店，常年为众多政商名流、影视明星、跨国高管定制衬衫与西服。以工艺精良、用料考究、版型出色、性价比高等特点广受各界好评。</a>
</p>
</div>]]>
    </content>
</entry>

<entry>
    <title>代码的抽象三原则</title>
    <link rel="alternate" type="text/html" href="http://www.ruanyifeng.com/blog/2013/01/abstraction_principles.html" />
    <id>tag:www.ruanyifeng.com,2013:/blog//1.1763</id>

    <published>2013-01-31T06:03:35Z</published>
    <updated>2013-03-10T10:16:28Z</updated>

    <summary>软件开发是&quot;抽象化&quot;原则（Abstraction）的一种体现。...</summary>
    <author>
        <name>阮一峰</name>
        <uri>http://www.ruanyifeng.com</uri>
    </author>
    
        <category term="IT" scheme="http://www.sixapart.com/ns/types#category" />
    
    
    <content type="html" xml:lang="en" xml:base="http://www.ruanyifeng.com/blog/">
        <![CDATA[<p>软件开发是<a href="http://en.wikipedia.org/wiki/Abstraction_principle_(computer_programming)">"抽象化"原则</a>（Abstraction）的一种体现。</p>]]>
        <![CDATA[<p>所谓"抽象化"，就是指从具体问题中，提取出具有共性的模式，再使用通用的解决方法加以处理。</p>

<p><img src="http://image.beekka.com/blog/201301/bg2013013105.jpg" /></p>

<p>开发软件的时候，一方面，我们总是希望使用别人已经写好的代码，另一方面，又希望自己写的代码尽可能重用，以求减少工作量。要做到这两个目标，这需要"抽象化"。</p>

<p>最近，我读到美国程序员<a href="http://lostechies.com/derickbailey/2012/10/31/abstraction-the-rule-of-three/">Derick Bailey</a>的一篇文章，谈到"抽象化"应该遵循的三个原则，觉得很有启发。</p>

<p><strong>一、DRY原则</strong></p>

<p><a href="http://en.wikipedia.org/wiki/Don%27t_repeat_yourself">DRY</a>是 Don't repeat yourself 的缩写，意思是"不要重复自己"。</p>

<p><img src="http://image.beekka.com/blog/201301/bg2013013102.jpg" /></p>

<p>软件工程名著<a href="http://en.wikipedia.org/wiki/The_Pragmatic_Programmer">《The Pragmatic Programmer》</a>首先提出了这个原则。它的涵义是，系统的每一个功能都应该有唯一的实现。也就是说，如果多次遇到同样的问题，就应该抽象出一个共同的解决方法，不要重复开发同样的功能。</p>

<p>这个原则有时也称为<a href="http://zh.wikipedia.org/wiki/%E4%B8%80%E6%AC%A1%E4%B8%94%E4%BB%85%E4%B8%80%E6%AC%A1">"一次且仅一次"原则</a>（Once and Only Once）。</p>

<p><strong>二、YAGNI原则</strong></p>

<p><a href="http://en.wikipedia.org/wiki/You_ain't_gonna_need_it">YAGNI</a>是 You aren't gonna need it 的缩写，意思是"你不会需要它"。</p>

<p><img src="http://image.beekka.com/blog/201301/bg2013013103.jpg" /></p>

<p>这是<a href="http://en.wikipedia.org/wiki/Extreme_programming">"极限编程"</a>提倡的原则，指的是你自以为有用的功能，实际上都是用不到的。因此，除了最核心的功能，其他功能一概不要部署，这样可以大大加快开发。</p>

<p>它背后的指导思想，就是尽可能快、尽可能简单地让软件运行起来（do the simplest thing that could possibly work）。</p>

<p>但是，这里出现了一个问题。仔细推敲的话，你会发现DRY原则和YAGNI原则并非完全兼容。前者追求"抽象化"，要求找到通用的解决方法；后者追求"快和省"，意味着不要把精力放在抽象化上面，因为很可能"你不会需要它"。所以，就有了第三个原则。</p>

<p><strong>三、Rule Of Three原则</strong></p>

<p><a href="http://en.wikipedia.org/wiki/Rule_of_three_(computer_programming)">Rule of three</a> 称为"三次原则"，指的是当某个功能第三次出现时，才进行"抽象化"。</p>

<p><img src="http://image.beekka.com/blog/201301/bg2013013104.jpg" /></p>

<p>这是软件开发大家<a href="http://en.wikipedia.org/wiki/Martin_Fowler">Martin Fowler</a>在《Refactoring》一书中提出的。</p>

<p>它的涵义是，第一次用到某个功能时，你写一个特定的解决方法；第二次又用到的时候，你拷贝上一次的代码；第三次出现的时候，你才着手"抽象化"，写出通用的解决方法。</p>

<p>这样做有几个理由：</p>

<p>（1）省事。如果一种功能只有一到两个地方会用到，就不需要在"抽象化"上面耗费时间了。</p>

<p>（2）容易发现模式。"抽象化"需要找到问题的模式，问题出现的场合越多，就越容易看出模式，从而可以更准确地"抽象化"。</p>

<p>比如，对于一个数列来说，两个元素不足以判断出规律：</p>

<blockquote>

<p>　　1, 2, _, _, _, _,</p>

</blockquote>

<p>第三个元素出现后，规律就变得较清晰了：</p>

<blockquote>

<p>　　1, 2, 4, _, _, _, </p>

</blockquote>

<p>（3）防止过度冗余。如果一种功能同时有多个实现，管理起来非常麻烦，修改的时候需要修改多处。在实际工作中，重复实现最多可以容忍出现一次，再多就无法接受了。</p>

<p>综上所述，"三次原则"是DRY原则和YAGNI原则的折衷，是代码冗余和开发成本的平衡点，值得我们在"抽象化"时遵循。</p>

<p>==========================================================</p>

<p>附：</p>

<p><strong>[广告]</strong></p>

<p>图灵公司打算重新出版<a href="http://www.amazon.com/Joel-Software-Occasionally-Developers-Designers/dp/1590593898/">《Joel on Software》</a>的中文版，正在寻找译者。如果你对此有兴趣，请与朱巍编辑联系（Email：zhuw(at)turingbook.com）试译。关于此书的更多情况，可参考我翻译的续集<a href="http://www.ruanyifeng.com/docs/mjos/">《More Joel on Software》</a>。特别提醒：翻译是非常辛苦、但是报酬很低的工作，写信前请想清楚，你是真的想翻译这本书。</p>

<p>（完）</p>]]>
        <![CDATA[<div style="color:#556677;line-height:160%;padding:0.3em 0.5em;border:1px solid #d3d3d3;margin:1em;background-color:#AAD2F0;-moz-border-radius: 10px;-webkit-border-radius:10px;border-radius: 10px;"><h3>文档信息</h3>
<ul>
<li>版权声明：自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></li>
<li>原文网址：<a href="http://www.ruanyifeng.com/blog/2013/01/abstraction_principles.html">http://www.ruanyifeng.com/blog/2013/01/abstraction_principles.html</a></li>
<li>最后修改时间：2013年3月10日 18:16</li>
<li>付费支持：<a href="https://me.alipay.com/ruanyf" target="_blank"><img src="http://www.ruanyifeng.com/blog/images/rmb_32.png" title="人民币" alt="人民币 - 支付宝" style="border:none;vertical-align:middle;" /></a> | <a href="https://www.paypal.com/cgi-bin/webscr?cmd=_xclick&business=yifeng.ruan@gmail.com&currency_code=USD&amount=0.99&return=http://www.ruanyifeng.com/thank.html&item_name=Ruan%20YiFeng's%20Blog&undefined_quantity=1&no_note=0" target="_blank"><img src="http://www.ruanyifeng.com/blog/images/dollar_32.png"  alt="美元 - paypal" title="美元" style="border:none;vertical-align:middle;" /></a> </li>
</ul></div>]]>
        <![CDATA[<div style="color:#556677;line-height:160%;padding:0.3em 0.5em;margin:1em;-moz-border-radius: 10px;-webkit-border-radius:10px;border-radius: 10px;"><p><strong>[广告]</strong>　<a href="http://ushan.cn?utm_source=ruanyifeng.com" target="_blank" style="border:none;">优衫（Ushan）是国内顶尖的定制西服店，常年为众多政商名流、影视明星、跨国高管定制衬衫与西服。以工艺精良、用料考究、版型出色、性价比高等特点广受各界好评。</a>
</p>
</div>]]>
    </content>
</entry>

<entry>
    <title>JavaScript Source Map 详解</title>
    <link rel="alternate" type="text/html" href="http://www.ruanyifeng.com/blog/2013/01/javascript_source_map.html" />
    <id>tag:www.ruanyifeng.com,2013:/blog//1.1762</id>

    <published>2013-01-23T06:30:38Z</published>
    <updated>2013-03-19T08:10:35Z</updated>

    <summary>上周，jQuery 1.9发布。...</summary>
    <author>
        <name>阮一峰</name>
        <uri>http://www.ruanyifeng.com</uri>
    </author>
    
        <category term="JavaScript" scheme="http://www.sixapart.com/ns/types#category" />
    
    
    <content type="html" xml:lang="en" xml:base="http://www.ruanyifeng.com/blog/">
        <![CDATA[<p>上周，<a href="http://blog.jquery.com/2013/01/15/jquery-1-9-final-jquery-2-0-beta-migrate-final-released/">jQuery 1.9</a>发布。</p>]]>
        <![CDATA[<p><img src="http://image.beekka.com/blog/201301/bg2013012203.png" /></p>

<p>这是2.0版之前的最后一个新版本，有很多新功能，其中一个就是支持Source Map。</p>

<p>访问 <a href="http://ajax.googleapis.com/ajax/libs/jquery/1.9.0/jquery.min.js">http://ajax.googleapis.com/ajax/libs/jquery/1.9.0/jquery.min.js</a>，打开压缩后的版本，滚动到底部，你可以看到最后一行是这样的：</p>

<blockquote>

<p>　　//@ sourceMappingURL=jquery.min.map</p>

</blockquote>

<p>这就是Source Map。它是一个独立的map文件，与源码在同一个目录下，你可以<a href="http://ajax.googleapis.com/ajax/libs/jquery/1.9.0/jquery.min.map">点击进去</a>，看看它的样子。</p>

<p>这是一个很有用的功能，本文将详细讲解这个功能。</p>

<p><strong>一、从源码转换讲起</strong></p>

<p>JavaScript脚本正变得越来越复杂。大部分源码（尤其是各种函数库和框架）都要经过转换，才能投入生产环境。</p>

<p>常见的源码转换，主要是以下三种情况：</p>

<blockquote>

<p>　　（1）压缩，减小体积。比如jQuery 1.9的源码，压缩前是252KB，压缩后是32KB。</p>

<p>　　（2）多个文件合并，减少HTTP请求数。</p>

<p>　　（3）其他语言编译成JavaScript。最常见的例子就是CoffeeScript。</p>

</blockquote>

<p>这三种情况，都使得实际运行的代码不同于开发代码，除错（debug）变得困难重重。</p>

<p>通常，JavaScript的解释器会告诉你，第几行第几列代码出错。但是，这对于转换后的代码毫无用处。举例来说，jQuery 1.9压缩后只有3行，每行3万个字符，所有内部变量都改了名字。你看着报错信息，感到毫无头绪，根本不知道它所对应的原始位置。</p>

<p>这就是Source map想要解决的问题。</p>

<p><strong>二、什么是Source map</strong></p>

<p>简单说，Source map就是一个信息文件，里面储存着位置信息。也就是说，转换后的代码的每一个位置，所对应的转换前的位置。</p>

<p>有了它，出错的时候，除错工具将直接显示原始代码，而不是转换后的代码。这无疑给开发者带来了很大方便。</p>

<p><img src="http://image.beekka.com/blog/201301/bg2013012204.png" /></p>

<p>目前，暂时只有Chrome浏览器支持这个功能。在Developer Tools的Setting设置中，确认选中"Enable source maps"。</p>

<p><img src="http://image.beekka.com/blog/201301/bg2013012201.png" /></p>

<p><strong>三、如何启用Source map</strong></p>

<p>正如前文所提到的，只要在转换后的代码尾部，加上一行就可以了。</p>

<blockquote>

<p>　　//@ sourceMappingURL=/path/to/file.js.map</p>

</blockquote>

<p>map文件可以放在网络上，也可以放在本地文件系统。</p>

<p><strong>四、如何生成Source map</strong></p>

<p>最常用的方法是使用Google的<a href="https://developers.google.com/closure/compiler/">Closure编译器</a>。</p>

<p>生成命令的格式如下：</p>

<blockquote>

<p>　　java -jar compiler.jar \ <br />
　　　　--js script.js \<br />
　　　　--create_source_map ./script-min.js.map \<br />
　　　　--source_map_format=V3 \<br />
　　　　--js_output_file script-min.js</p>

</blockquote>

<p>各个参数的意义如下：</p>

<blockquote>

<p>　　- js： 转换前的代码文件<br />
　　- create_source_map： 生成的source map文件<br />
　　- source_map_format：source map的版本，目前一律采用V3。<br />
　　- js_output_file： 转换后的代码文件。</p>

</blockquote>

<p>其他的生成方法可以参考<a href="http://net.tutsplus.com/tutorials/tools-and-tips/source-maps-101/">这篇文章</a>。</p>

<p><strong>五、Source map的格式</strong></p>

<p>打开Source map文件，它大概是这个样子：</p>

<blockquote>

<p>　　{<br />
　　　　version : 3,<br />
　　　　file: "out.js",<br />
　　　　sourceRoot : "",<br />
　　　　sources: ["foo.js", "bar.js"],<br />
　　　　names: ["src", "maps", "are", "fun"],<br />
　　　　mappings: "AAgBC,SAAQ,CAAEA"<br />
　　}</p>

</blockquote>

<p>整个文件就是一个JavaScript对象，可以被解释器读取。它主要有以下几个属性：</p>

<blockquote>

<p>　　- version：Source map的版本，目前为3。</p>

<p>　　- file：转换后的文件名。</p>

<p>　　- sourceRoot：转换前的文件所在的目录。如果与转换前的文件在同一目录，该项为空。</p>

<p>　　- sources：转换前的文件。该项是一个数组，表示可能存在多个文件合并。</p>

<p>　　- names：转换前的所有变量名和属性名。</p>

<p>　　- mappings：记录位置信息的字符串，下文详细介绍。</p>

</blockquote>

<p><strong>六、mappings属性</strong></p>

<p>下面才是真正有趣的部分：两个文件的各个位置是如何一一对应的。</p>

<p>关键就是map文件的mappings属性。这是一个很长的字符串，它分成三层。</p>

<blockquote>

<p>　　第一层是<strong>行对应</strong>，以分号（;）表示，每个分号对应转换后源码的一行。所以，第一个分号前的内容，就对应源码的第一行，以此类推。</p>

<p>　　第二层是<strong>位置对应</strong>，以逗号（,）表示，每个逗号对应转换后源码的一个位置。所以，第一个逗号前的内容，就对应该行源码的第一个位置，以此类推。</p>

<p>　　第三层是<strong>位置转换</strong>，以<a href="http://en.wikipedia.org/wiki/Variable-length_quantity">VLQ编码</a>表示，代表该位置对应的转换前的源码位置。</p>

</blockquote>

<p>举例来说，假定mappings属性的内容如下：</p>

<blockquote>

<p>　　mappings:"AAAAA,BBBBB;CCCCC"</p>

</blockquote>

<p>就表示，转换后的源码分成两行，第一行有两个位置，第二行有一个位置。</p>

<p><strong>七、位置对应的原理</strong></p>

<p>每个位置使用五位，表示五个字段。</p>

<p>从左边算起，</p>

<blockquote>

<p>　　- 第一位，表示这个位置在（转换后的代码的）的第几列。</p>

<p>　　- 第二位，表示这个位置属于sources属性中的哪一个文件。</p>

<p>　　- 第三位，表示这个位置属于转换前代码的第几行。</p>

<p>　　- 第四位，表示这个位置属于转换前代码的第几列。</p>

<p>　　- 第五位，表示这个位置属于names属性中的哪一个变量。</p>

</blockquote>

<p>有几点需要说明。首先，所有的值都是以0作为基数的。其次，第五位不是必需的，如果该位置没有对应names属性中的变量，可以省略第五位。再次，每一位都采用VLQ编码表示；由于VLQ编码是变长的，所以每一位可以由多个字符构成。</p>

<p>如果某个位置是AAAAA，由于A在VLQ编码中表示0，因此这个位置的五个位实际上都是0。它的意思是，该位置在转换后代码的第0列，对应sources属性中第0个文件，属于转换前代码的第0行第0列，对应names属性中的第0个变量。</p>

<p><strong>八、VLQ编码</strong></p>

<p>最后，谈谈如何用<a href="http://en.wikipedia.org/wiki/Variable-length_quantity">VLQ编码</a>表示数值。</p>

<p>这种编码最早用于MIDI文件，后来被多种格式采用。它的特点就是可以非常精简地表示很大的数值。</p>

<p>VLQ编码是变长的。如果（整）数值在-15到+15之间（含两个端点），用一个字符表示；超出这个范围，就需要用多个字符表示。它规定，每个字符使用6个两进制位，正好可以借用<a href="http://en.wikipedia.org/wiki/Base_64">Base 64</a>编码的字符表。</p>

<p><img src="http://image.beekka.com/blog/201301/bg2013012202.png" /></p>

<p>在这6个位中，左边的第一位（最高位）表示是否"连续"（continuation）。如果是1，代表这６个位后面的6个位也属于同一个数；如果是0，表示该数值到这6个位结束。</p>

<blockquote>

<p>　　Continuation<br />
　　|　　　　　Sign<br />
　　|　　　　　|<br />
　　V　　　　　V<br />
　　１０１０１１</p>

</blockquote>

<p>这6个位中的右边最后一位（最低位）的含义，取决于这6个位是否是某个数值的VLQ编码的第一个字符。如果是的，这个位代表"符号"（sign），0为正，1为负（Source map的符号固定为0）；如果不是，这个位没有特殊含义，被算作数值的一部分。</p>

<p><strong>九、VLQ编码：实例</strong></p>

<p>下面看一个例子，如何对数值16进行VLQ编码。</p>

<blockquote>

<p>　　第一步，将16改写成二进制形式10000。</p>

<p>　　第二步，在最右边补充符号位。因为16大于0，所以符号位为0，整个数变成100000。</p>

<p>　　第三步，从右边的最低位开始，将整个数每隔5位，进行分段，即变成1和00000两段。如果最高位所在的段不足5位，则前面补0，因此两段变成00001和00000。</p>

<p>　　第四步，将两段的顺序倒过来，即00000和00001。</p>

<p>　　第五步，在每一段的最前面添加一个"连续位"，除了最后一段为0，其他都为1，即变成100000和000001。</p>

<p>　　第六步，将每一段转成Base 64编码。</p>

</blockquote>

<p>查表可知，100000为g，000001为B。因此，数值16的VLQ编码为gB。上面的过程，看上去好像很复杂，做起来其实很简单，具体的实现请看官方的<a href="https://github.com/mozilla/source-map/blob/master/lib/source-map/base64-vlq.js">base64-vlq.js</a>文件，里面有详细的注释。</p>

<p><strong>十、参考链接</strong></p>

<p>　　- <a href="http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/">Introduction To JavaScript Source Maps</a><br />
　　- <a href="https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit">Source Map Revision 3 Proposal</a></p>

<p>（完）</p>]]>
        <![CDATA[<div style="color:#556677;line-height:160%;padding:0.3em 0.5em;border:1px solid #d3d3d3;margin:1em;background-color:#AAD2F0;-moz-border-radius: 10px;-webkit-border-radius:10px;border-radius: 10px;"><h3>文档信息</h3>
<ul>
<li>版权声明：自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></li>
<li>原文网址：<a href="http://www.ruanyifeng.com/blog/2013/01/javascript_source_map.html">http://www.ruanyifeng.com/blog/2013/01/javascript_source_map.html</a></li>
<li>最后修改时间：2013年3月19日 16:10</li>
<li>付费支持：<a href="https://me.alipay.com/ruanyf" target="_blank"><img src="http://www.ruanyifeng.com/blog/images/rmb_32.png" title="人民币" alt="人民币 - 支付宝" style="border:none;vertical-align:middle;" /></a> | <a href="https://www.paypal.com/cgi-bin/webscr?cmd=_xclick&business=yifeng.ruan@gmail.com&currency_code=USD&amount=0.99&return=http://www.ruanyifeng.com/thank.html&item_name=Ruan%20YiFeng's%20Blog&undefined_quantity=1&no_note=0" target="_blank"><img src="http://www.ruanyifeng.com/blog/images/dollar_32.png"  alt="美元 - paypal" title="美元" style="border:none;vertical-align:middle;" /></a> </li>
</ul></div>]]>
        <![CDATA[<div style="color:#556677;line-height:160%;padding:0.3em 0.5em;margin:1em;-moz-border-radius: 10px;-webkit-border-radius:10px;border-radius: 10px;"><p><strong>[广告]</strong>　<a href="http://ushan.cn?utm_source=ruanyifeng.com" target="_blank" style="border:none;">优衫（Ushan）是国内顶尖的定制西服店，常年为众多政商名流、影视明星、跨国高管定制衬衫与西服。以工艺精良、用料考究、版型出色、性价比高等特点广受各界好评。</a>
</p>
</div>]]>
    </content>
</entry>

<entry>
    <title>Javascript 严格模式详解</title>
    <link rel="alternate" type="text/html" href="http://www.ruanyifeng.com/blog/2013/01/javascript_strict_mode.html" />
    <id>tag:www.ruanyifeng.com,2013:/blog//1.1761</id>

    <published>2013-01-14T05:42:05Z</published>
    <updated>2013-02-04T06:29:15Z</updated>

    <summary>一、概述 除了正常运行模式，ECMAscript 5添加了第二种运行模式：&quot;严格模式&quot;（strict mode）。顾名思义，这种模式使得Javascript在更严格的条件下运行。...</summary>
    <author>
        <name>阮一峰</name>
        <uri>http://www.ruanyifeng.com</uri>
    </author>
    
        <category term="JavaScript" scheme="http://www.sixapart.com/ns/types#category" />
    
    
    <content type="html" xml:lang="en" xml:base="http://www.ruanyifeng.com/blog/">
        <![CDATA[<p><strong>一、概述</strong></p>

<p>除了正常运行模式，ECMAscript 5添加了第二种运行模式：<a href="https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Functions_and_function_scope/Strict_mode">"严格模式"</a>（strict mode）。顾名思义，这种模式使得Javascript在更严格的条件下运行。</p>]]>
        <![CDATA[<p><img src="http://image.beekka.com/blog/201301/bg2013011401.jpg" /></p>

<p>设立"严格模式"的目的，主要有以下几个：</p>

<blockquote>

<p>　　- 消除Javascript语法的一些不合理、不严谨之处，减少一些怪异行为;</p>

<p>　　- 消除代码运行的一些不安全之处，保证代码运行的安全；</p>

<p>　　- 提高编译器效率，增加运行速度；</p>

<p>　　- 为未来新版本的Javascript做好铺垫。</p>

</blockquote>

<p>"严格模式"体现了Javascript更合理、更安全、更严谨的发展方向，包括IE 10在内的主流浏览器，都已经<a href="http://kangax.github.com/es5-compat-table">支持</a>它，许多大项目已经开始全面拥抱它。</p>

<p>另一方面，同样的代码，在"严格模式"中，可能会有不一样的运行结果；一些在"正常模式"下可以运行的语句，在"严格模式"下将不能运行。掌握这些内容，有助于更细致深入地理解Javascript，让你变成一个更好的程序员。</p>

<p>本文将对"严格模式"做详细介绍。</p>

<p><strong>二、进入标志</strong></p>

<p>进入"严格模式"的标志，是下面这行语句：</p>

<blockquote>

<p>　　"use strict";</p>

</blockquote>

<p>老版本的浏览器会把它当作一行普通字符串，加以忽略。</p>

<p><strong>三、如何调用</strong></p>

<p>"严格模式"有两种调用方法，适用于不同的场合。</p>

<p><strong>3.1 针对整个脚本文件</strong></p>

<p>将"use strict"放在脚本文件的第一行，则整个脚本都将以"严格模式"运行。如果这行语句不在第一行，则无效，整个脚本以"正常模式"运行。如果不同模式的代码文件合并成一个文件，这一点需要特别注意。</p>

<p>(严格地说，只要前面不是产生实际运行结果的语句，"use strict"可以不在第一行，比如直接跟在一个空的分号后面。)</p>

<blockquote>

<p>　　&lt;script&gt;<br />
　　　　"use strict";<br />
　　　　console.log("这是严格模式。");<br />
　　&lt;/script&gt;</p>

<p>　　&lt;script&gt;<br />
　　　　console.log("这是正常模式。");<br />
　　&lt;/script&gt;</p>

</blockquote>

<p>上面的代码表示，一个网页中依次有两段Javascript代码。前一个script标签是严格模式，后一个不是。</p>

<p><strong>3.2 针对单个函数</strong></p>

<p>将"use strict"放在函数体的第一行，则整个函数以"严格模式"运行。</p>

<blockquote>

<p>　　function strict(){<br />
　　　　"use strict";<br />
　　　　return "这是严格模式。";<br />
　　}</p>

<p>　　function notStrict() {<br />
　　　　return "这是正常模式。";<br />
　　}</p>

</blockquote>

<p><strong>3.3 脚本文件的变通写法</strong></p>

<p>因为第一种调用方法不利于文件合并，所以更好的做法是，借用第二种方法，将整个脚本文件放在一个立即执行的匿名函数之中。</p>

<blockquote>

<p>　　(function (){<br />
 <br />
　　　　"use strict";</p>

<p>　　　　// some code here<br />
 <br />
　　 })();</p>

</blockquote>

<p><strong>四、语法和行为改变</strong></p>

<p>严格模式对Javascript的语法和行为，都做了一些改变。</p>

<p><strong>4.1 全局变量显式声明</strong></p>

<p>在正常模式中，如果一个变量没有声明就赋值，默认是全局变量。严格模式禁止这种用法，全局变量必须显式声明。</p>

<blockquote>

<p>"use strict";</p>

<p>　　v = 1; // 报错，v未声明</p>

<p>　　for(i = 0; i < 2; i++) { // 报错，i未声明<br />
　　}</p>

</blockquote>

<p>因此，严格模式下，变量都必须先用var命令声明，然后再使用。</p>

<p><strong>4.2 静态绑定</strong></p>

<p>Javascript语言的一个特点，就是允许"动态绑定"，即某些属性和方法到底属于哪一个对象，不是在编译时确定的，而是在运行时（runtime）确定的。</p>

<p>严格模式对动态绑定做了一些限制。某些情况下，只允许静态绑定。也就是说，属性和方法到底归属哪个对象，在编译阶段就确定。这样做有利于编译效率的提高，也使得代码更容易阅读，更少出现意外。</p>

<p>具体来说，涉及以下几个方面。</p>

<p><strong>（1）禁止使用with语句</strong></p>

<p>因为with语句无法在编译时就确定，属性到底归属哪个对象。</p>

<blockquote>

<p>　　"use strict";</p>

<p>　　var v  = 1;</p>

<p>　　with (o){ // 语法错误 <br />
　　　　v = 2;<br />
　　}</p>

</blockquote>

<p><strong>（2）创设eval作用域</strong></p>

<p>正常模式下，Javascript语言有两种变量作用域（scope）：全局作用域和函数作用域。严格模式创设了第三种作用域：eval作用域。</p>

<p>正常模式下，eval语句的作用域，取决于它处于全局作用域，还是处于函数作用域。严格模式下，eval语句本身就是一个作用域，不再能够生成全局变量了，它所生成的变量只能用于eval内部。</p>

<blockquote>

<p>　　"use strict";</p>

<p>　　var x = 2;</p>

<p>　　console.info(eval("var x = 5; x")); // 5</p>

<p>　　console.info(x); // 2</p>

</blockquote>

<p><strong>4.3 增强的安全措施</strong></p>

<p><strong>（1）禁止this关键字指向全局对象</strong></p>

<blockquote>

<p>　　function f(){<br />
　　　　return !this;<br />
　　} <br />
　　// 返回false，因为"this"指向全局对象，"!this"就是false</p>

<p>　　function f(){   <br />
　　　　"use strict";<br />
　　　　return !this;<br />
　　} <br />
　　// 返回true，因为严格模式下，this的值为undefined，所以"!this"为true。</p>

</blockquote>

<p>因此，使用构造函数时，如果忘了加new，this不再指向全局对象，而是报错。</p>

<blockquote>

<p>　　function f(){   </p>

<p>　　　　"use strict";</p>

<p>　　　　this.a = 1;</p>

<p>　　};</p>

<p>　　f();// 报错，this未定义</p>

</blockquote>

<p><strong>（2）禁止在函数内部遍历调用栈</strong></p>

<blockquote>

<p>　　function f1(){</p>

<p>　　　　"use strict";</p>

<p>　　　　f1.caller;    // 报错</p>

<p>　　　　f1.arguments; // 报错</p>

<p>　　}</p>

<p>　　f1();</p>

</blockquote>

<p><strong>4.4 禁止删除变量</strong></p>

<p>严格模式下无法删除变量。只有configurable设置为true的对象属性，才能被删除。</p>

<blockquote>

<p>　　"use strict";</p>

<p>　　var x;</p>

<p>　　delete x; // 语法错误</p>

<p>　　var o = Object.create(null, 'x', {<br />
　　　　　　value: 1,<br />
　　　　　　configurable: true<br />
 　　});</p>

<p>　　delete o.x; // 删除成功</p>

</blockquote>

<p><strong>4.5 显式报错</strong></p>

<p>正常模式下，对一个对象的只读属性进行赋值，不会报错，只会默默地失败。严格模式下，将报错。</p>

<blockquote>

<p>　　"use strict";<br />
 <br />
　　var o = {};</p>

<p>　　Object.defineProperty(o, "v", { value: 1, writable: false });</p>

<p>　　o.v = 2; // 报错</p>

</blockquote>

<p>严格模式下，对一个使用getter方法读取的属性进行赋值，会报错。</p>

<blockquote>

<p>　　"use strict";<br />
 <br />
　　var o = {<br />
    <br />
　　　　get v() { return 1; } </p>

<p>　　};</p>

<p>　　o.v = 2; // 报错</p>

</blockquote>

<p>严格模式下，对禁止扩展的对象添加新属性，会报错。</p>

<blockquote>

<p>　　"use strict";</p>

<p>　　var o = {};</p>

<p>　　Object.preventExtensions(o);</p>

<p>　　o.v = 1; // 报错</p>

</blockquote>

<p>严格模式下，删除一个不可删除的属性，会报错。</p>

<blockquote>

<p>　　"use strict";</p>

<p>　　delete Object.prototype; // 报错</p>

</blockquote>

<p><strong>4.6 重名错误</strong></p>

<p>严格模式新增了一些语法错误。</p>

<p><strong>（1）对象不能有重名的属性</strong></p>

<p>正常模式下，如果对象有多个重名属性，最后赋值的那个属性会覆盖前面的值。严格模式下，这属于语法错误。</p>

<blockquote>

<p>　　"use strict";</p>

<p>　　var o = {<br />
　　　　p: 1,<br />
　　　　p: 2<br />
　　}; // 语法错误</blockquote></p>

<p><strong>（2）函数不能有重名的参数</strong></p>

<p>正常模式下，如果函数有多个重名的参数，可以用arguments[i]读取。严格模式下，这属于语法错误。</p>

<blockquote>

<p>　　"use strict";</p>

<p>　　function f(a, a, b) { // 语法错误  </p>

<p>　　　　return ; </p>

<p>　　}</p>

</blockquote>

<p><strong>4.7 禁止八进制表示法</strong></p>

<p>正常模式下，整数的第一位如果是0，表示这是八进制数，比如0100等于十进制的64。严格模式禁止这种表示法，整数第一位为0，将报错。</p>

<blockquote>

<p>　　"use strict";</p>

<p>　　var n = 0100; // 语法错误</p>

</blockquote>

<p><strong>4.8 arguments对象的限制</strong></p>

<p>arguments是函数的参数对象，严格模式对它的使用做了限制。</p>

<p><strong>（1）不允许对arguments赋值</strong></p>

<blockquote>

<p>　　"use strict";</p>

<p>　　arguments++; // 语法错误</p>

<p>　　var obj = { set p(arguments) { } };  // 语法错误</p>

<p>　　try { } catch (arguments) { }  // 语法错误</p>

<p>　　function arguments() { }  // 语法错误</p>

<p>　　var f = new Function("arguments", "'use strict'; return 17;");  // 语法错误</p>

</blockquote>

<p><strong>（2）arguments不再追踪参数的变化</strong></p>

<blockquote>

<p>　　function f(a) {</p>

<p>　　　　a = 2;</p>

<p>　　　　return [a, arguments[0]];</p>

<p>　　}</p>

<p>　　f(1); // 正常模式为[2,2]</p>

<p>　　function f(a) {</p>

<p>　　　　"use strict";    </p>

<p>　　　　a = 2;</p>

<p>　　　　return [a, arguments[0]];</p>

<p>　　}</p>

<p>　　f(1); // 严格模式为[2,1]</p>

</blockquote>

<p><strong>（3）禁止使用arguments.callee</strong></p>

<p>这意味着，你无法在匿名函数内部调用自身了。</p>

<blockquote>

<p>　　"use strict";</p>

<p>　　var f = function() { return arguments.callee; };</p>

<p>　　f(); // 报错</p>

</blockquote>

<p><strong>4.9 函数必须声明在顶层</strong></p>

<p>将来Javascript的新版本会引入"块级作用域"。为了与新版本接轨，严格模式只允许在全局作用域或函数作用域的顶层声明函数。也就是说，不允许在非函数的代码块内声明函数。</p>

<blockquote>

<p>　　"use strict";</p>

<p>　　if (true) {</p>

<p>　　　　function f() { } // 语法错误</p>

<p>　　}</p>

<p>　　for (var i = 0; i < 5; i++) {</p>

<p>　　　　function f2() { } // 语法错误</p>

<p>　　}</p>

</blockquote>

<p><strong>4.10 保留字</strong></p>

<p>为了向将来Javascript的新版本过渡，严格模式新增了一些保留字：implements, interface, let, package, private, protected, public, static, yield。</p>

<p>使用这些词作为变量名将会报错。</p>

<blockquote>

<p>　　function package(protected) { // 语法错误</p>

<p>　　　　"use strict";</p>

<p>　　　　var implements; // 语法错误</p>

<p>　　}</p>

</blockquote>

<p>此外，ECMAscript第五版本身还规定了另一些保留字（class, enum, export, extends, import, super），以及各大浏览器自行增加的const保留字，也是不能作为变量名的。</p>

<p><strong>五、参考链接</strong></p>

<p>  - MDN, <a href="https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Functions_and_function_scope/Strict_mode">Strict mode</a><br />
  - Dr. Axel Rauschmayer，<a href="http://www.2ality.com/2011/01/javascripts-strict-mode-summary.html">JavaScript's strict mode: a summary</a><br />
  - Douglas Crockford, <a href="http://java-script.limewebs.com/strictMode/test_hosted.html">Strict Mode Is Coming To Town</a></p>

<p>（完）</p>]]>
        <![CDATA[<div style="color:#556677;line-height:160%;padding:0.3em 0.5em;border:1px solid #d3d3d3;margin:1em;background-color:#AAD2F0;-moz-border-radius: 10px;-webkit-border-radius:10px;border-radius: 10px;"><h3>文档信息</h3>
<ul>
<li>版权声明：自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></li>
<li>原文网址：<a href="http://www.ruanyifeng.com/blog/2013/01/javascript_strict_mode.html">http://www.ruanyifeng.com/blog/2013/01/javascript_strict_mode.html</a></li>
<li>最后修改时间：2013年2月 4日 14:29</li>
<li>付费支持：<a href="https://me.alipay.com/ruanyf" target="_blank"><img src="http://www.ruanyifeng.com/blog/images/rmb_32.png" title="人民币" alt="人民币 - 支付宝" style="border:none;vertical-align:middle;" /></a> | <a href="https://www.paypal.com/cgi-bin/webscr?cmd=_xclick&business=yifeng.ruan@gmail.com&currency_code=USD&amount=0.99&return=http://www.ruanyifeng.com/thank.html&item_name=Ruan%20YiFeng's%20Blog&undefined_quantity=1&no_note=0" target="_blank"><img src="http://www.ruanyifeng.com/blog/images/dollar_32.png"  alt="美元 - paypal" title="美元" style="border:none;vertical-align:middle;" /></a> </li>
</ul></div>]]>
        <![CDATA[<div style="color:#556677;line-height:160%;padding:0.3em 0.5em;margin:1em;-moz-border-radius: 10px;-webkit-border-radius:10px;border-radius: 10px;"><p><strong>[广告]</strong>　<a href="http://ushan.cn?utm_source=ruanyifeng.com" target="_blank" style="border:none;">优衫（Ushan）是国内顶尖的定制西服店，常年为众多政商名流、影视明星、跨国高管定制衬衫与西服。以工艺精良、用料考究、版型出色、性价比高等特点广受各界好评。</a>
</p>
</div>]]>
    </content>
</entry>

<entry>
    <title>泊松分布与美国枪击案</title>
    <link rel="alternate" type="text/html" href="http://www.ruanyifeng.com/blog/2013/01/poisson_distribution.html" />
    <id>tag:www.ruanyifeng.com,2013:/blog//1.1760</id>

    <published>2013-01-08T13:49:31Z</published>
    <updated>2013-02-27T09:20:44Z</updated>

    <summary>去年12月，美国康涅狄格州发生校园枪击案，造成28人死亡。...</summary>
    <author>
        <name>阮一峰</name>
        <uri>http://www.ruanyifeng.com</uri>
    </author>
    
        <category term="Science" scheme="http://www.sixapart.com/ns/types#category" />
    
    
    <content type="html" xml:lang="en" xml:base="http://www.ruanyifeng.com/blog/">
        <![CDATA[<p>去年12月，美国康涅狄格州发生<a href="http://news.qq.com/a/20121215/000199.htm">校园枪击案</a>，造成28人死亡。</p>]]>
        <![CDATA[<p><img src="http://image.beekka.com/blog/201301/bg2013010801.jpg" /></p>

<p><a href="http://www.motherjones.com/politics/2012/07/mass-shootings-map?page=2">资料</a>显示，1982年至2012年，美国共发生62起（大规模）枪击案。其中，2012年发生了7起，是次数最多的一年。</p>

<p><img src="http://image.beekka.com/blog/201301/bg2013010802.jpg" /></p>

<p><strong>去年有这么多枪击案，这是巧合，还是<a href="http://www.tnr.com/blog/plank/111149/why-are-mass-shootings-the-rise">表明</a>美国治安恶化了？</strong></p>

<p>前几天，我看到一篇很有趣的<a href="http://www.empiricalzeal.com/2012/12/24/are-mass-shootings-really-random-events-a-look-at-the-us-numbers/">文章</a>，使用<a href="http://zh.wikipedia.org/zh-cn/%E6%B3%8A%E6%9D%BE%E5%88%86%E4%BD%88">"泊松分布"</a>（Poisson distribution），判断同一年发生7起枪击案是否巧合。<br />
<!--</p>

<p>"泊松分布"需要满足三个条件：</p>

<blockquote> 

<p>  <strong>（1）研究对象是小概率事件。</strong></p>

<p>  <strong>（2）各个事件是独立的，不会互相影响。</strong></p>

<p>  <strong>（3）事件的发生概率是稳定的。</strong></p>

</blockquote>

<p>--></p>

<p>让我们先通过一个例子，了解什么是"泊松分布"。</p>

<blockquote>

<p><img src="http://image.beekka.com/blog/201301/bg2013010803.jpg" /></p>

<p><strong>已知某家小杂货店，平均每周售出2个水果罐头。请问该店水果罐头的最佳库存量是多少？</strong></p>

</blockquote>

<p>假定不存在季节因素，可以近似认为，这个问题满足以下三个条件：</p>

<blockquote>

<p>  （1）顾客购买水果罐头是小概率事件。</p>

<p>  （2）购买水果罐头的顾客是独立的，不会互相影响。</p>

<p>  （3）顾客购买水果罐头的概率是稳定的。</p>

</blockquote>

<p>在统计学上，只要某类事件满足上面三个条件，它就服从"泊松分布"。</p>

<p>泊松分布的公式如下：</p>

<blockquote>

<p><img class="tex" alt="P(X=k)=\frac{e^{-\lambda}\lambda^k}{k!}" src="http://upload.wikimedia.org/math/9/f/a/9fa6dab1d04c709f1502cd54fdd43de7.png" style="border:0;"></p>

</blockquote>

<p>各个参数的含义：</p>

<blockquote>

<p>　　P：每周销售k个罐头的概率。</p>

<p>　　X：水果罐头的销售变量。</p>

<p>　　k：X的取值（0，1，2，3...）。</p>

<p>　　λ：每周水果罐头的平均销售量，是一个常数，本题为2。</p>

</blockquote>

<p>根据公式，计算得到每周销量的分布：</p>

<p><img src="http://image.beekka.com/blog/201301/bg2013010804.png" /></p>

<p>从上表可见，如果存货4个罐头，95%的概率不会缺货（平均每19周发生一次）；如果存货5个罐头，98%的概率不会缺货（平均59周发生一次）。</p>

<p><img src="http://image.beekka.com/blog/201301/bg2013010805.jpg" /></p>

<p>现在，我们再回过头，来看美国枪击案。</p>

<p>假定它们满足"泊松分布"的三个条件：</p>

<blockquote>

<p>　　（1）枪击案是小概率事件。</p>

<p>　　（2）枪击案是独立的，不会互相影响。</p>

<p>　　（3）枪击案的发生概率是稳定的。</p>

</blockquote>

<p>显然，第三个条件是关键。如果成立，就说明美国的治安没有恶化；如果不成立，就说明枪击案的发生概率不稳定，正在提高，美国治安恶化。</p>

<p>根据<a href="http://www.motherjones.com/politics/2012/07/mass-shootings-map?page=2">资料</a>，1982--2012年枪击案的分布情况如下：</p>

<p><img src="http://image.beekka.com/blog/201301/bg2013010806.png" /></p>

<p>计算得到，平均每年发生2起枪击案，所以 λ = 2 。</p>

<p><img src="http://image.beekka.com/blog/201301/bg2013010807.png" /></p>

<p>上图中，蓝色的条形柱是实际的观察值，红色的虚线是理论的预期值。可以看到，观察值与期望值还是相当接近的。</p>

<p><img src="http://image.beekka.com/blog/201301/bg2013010808.png" /></p>

<p>我们用<a href="http://en.wikipedia.org/wiki/Pearson%27s_chi-squared_test">"卡方检验"</a>（chi-square test），检验观察值与期望值之间是否存在显著差异。</p>

<blockquote>

<p>　　卡方统计量 = Σ [ ( 观察值 - 期望值 ) ^ 2 / 期望值 ]</p>

</blockquote>

<p>计算得到，卡方统计量等于9.82。查表后得到，置信水平0.90、自由度7的卡方分布临界值为12.017。<strong>因此，卡方统计量小于临界值，这表明枪击案的观察值与期望值之间没有显著差异。</strong>所以，可以接受"发生枪击案的概率是稳定的"假设，也就是说，从统计学上无法得到美国治安正在恶化的结论。</p>

<p>但是，也必须看到，卡方统计量9.82离临界值很接近，<a href="http://en.wikipedia.org/wiki/P-value">p-value</a>只有0.18。<strong>也就是说，对于"美国治安没有恶化"的结论，我们只有82%的把握，还有18%的可能是我们错了，美国治安实际上正在恶化。</strong>因此，这就需要看今后两年中，是否还有大量枪击案发生。如果确实发生了，泊松分布就不成立了。</p>

<p><strong>[参考阅读]</strong></p>

<p>　　* <a href="http://episte.math.ntu.edu.tw/articles/sm/sm_16_07_1/index.html">泊松分布</a>，by 曹亮吉</p>

<p>　　* <a href="http://openinfo.npust.edu.tw/agriculture/npus12/jj/agr10ch10.pdf">卡方分布</a>（PDF文件）</p>

<p>（完）</p>]]>
        <![CDATA[<div style="color:#556677;line-height:160%;padding:0.3em 0.5em;border:1px solid #d3d3d3;margin:1em;background-color:#AAD2F0;-moz-border-radius: 10px;-webkit-border-radius:10px;border-radius: 10px;"><h3>文档信息</h3>
<ul>
<li>版权声明：自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></li>
<li>原文网址：<a href="http://www.ruanyifeng.com/blog/2013/01/poisson_distribution.html">http://www.ruanyifeng.com/blog/2013/01/poisson_distribution.html</a></li>
<li>最后修改时间：2013年2月27日 17:20</li>
<li>付费支持：<a href="https://me.alipay.com/ruanyf" target="_blank"><img src="http://www.ruanyifeng.com/blog/images/rmb_32.png" title="人民币" alt="人民币 - 支付宝" style="border:none;vertical-align:middle;" /></a> | <a href="https://www.paypal.com/cgi-bin/webscr?cmd=_xclick&business=yifeng.ruan@gmail.com&currency_code=USD&amount=0.99&return=http://www.ruanyifeng.com/thank.html&item_name=Ruan%20YiFeng's%20Blog&undefined_quantity=1&no_note=0" target="_blank"><img src="http://www.ruanyifeng.com/blog/images/dollar_32.png"  alt="美元 - paypal" title="美元" style="border:none;vertical-align:middle;" /></a> </li>
</ul></div>]]>
        <![CDATA[<div style="color:#556677;line-height:160%;padding:0.3em 0.5em;margin:1em;-moz-border-radius: 10px;-webkit-border-radius:10px;border-radius: 10px;"><p><strong>[广告]</strong>　<a href="http://ushan.cn?utm_source=ruanyifeng.com" target="_blank" style="border:none;">优衫（Ushan）是国内顶尖的定制西服店，常年为众多政商名流、影视明星、跨国高管定制衬衫与西服。以工艺精良、用料考究、版型出色、性价比高等特点广受各界好评。</a>
</p>
</div>]]>
    </content>
</entry>

<entry>
    <title>反Secure Boot垄断：兼谈如何在Windows 8电脑上安装Linux</title>
    <link rel="alternate" type="text/html" href="http://www.ruanyifeng.com/blog/2013/01/secure_boot.html" />
    <id>tag:www.ruanyifeng.com,2013:/blog//1.1759</id>

    <published>2013-01-02T14:47:40Z</published>
    <updated>2013-03-02T05:45:24Z</updated>

    <summary>一、自由软件基金会的呼吁...</summary>
    <author>
        <name>阮一峰</name>
        <uri>http://www.ruanyifeng.com</uri>
    </author>
    
        <category term="IT" scheme="http://www.sixapart.com/ns/types#category" />
    
    
    <content type="html" xml:lang="en" xml:base="http://www.ruanyifeng.com/blog/">
        <![CDATA[<p><strong>一、自由软件基金会的呼吁</strong></p>]]>
        <![CDATA[<p>上周，2012年将近结束的时候，<a href="http://www.fsf.org/campaigns/secure-boot-vs-restricted-boot/2012-appeal">自由软件基金会</a>（FSF）发出呼吁，要求人们继续支持反Secure Boot垄断，希望签名者能达到5万人（目前是4万）。</p>

<p>我觉得，这个呼吁很重要。如果我们不支持，未来就无法自由地使用硬件、安装自己想要的软件。</p>

<p>这绝非危言耸听。而且，由于这个事件直接与Windows 8操作系统有关，因此意味着一切已经迫在眉睫了。</p>

<p>下面，我根据自己的理解，谈谈这到底怎么回事。如果你是一个Linux爱好者，或者喜欢自己安装操作系统，下面的内容与你直接相关。</p>

<p><strong>二、BIOS和UEFI</strong></p>

<p>所有电脑启动的时候，都会运行<a href="http://zh.wikipedia.org/wiki/BIOS">BIOS</a>程序，用于初始化硬件。</p>

<p><img src="http://image.beekka.com/blog/201301/bg2013010101.png" /></p>

<p>自从个人电脑诞生后，就一直如此。过去30年我们都在使用类似上图的画面，设置硬件参数。不用说，BIOS已经变得日益不适用了。</p>

<p>1998年，Intel牵头，联合AMD、AMI、Apple、Dell、HP、IBM、Lenovo、Microsoft和Phoenix等业界主要厂商，开始制定新一代BIOS。这个项目叫做"统一的可扩展固定接口"（Unified Extensible Firmware Interface），简称<a href="http://en.wikipedia.org/wiki/Unified_Extensible_Firmware_Interface">UEFI</a>。2005年推出1.1版，目前是2.3版。</p>

<p><img src="http://image.beekka.com/blog/201301/bg2013010102.jpg" /></p>

<p>将来一开机，电脑运行的将不是BIOS，而是UEFI BIOS。等它运行结束，再载入操作系统。</p>

<p><strong>三、微软的态度</strong></p>

<p>UEFI是一个很先进的、面向未来的规格。但是很长时间内无法推广，原因就是微软公司不积极。</p>

<p>Windows操作系统是桌面市场的主流系统，如果它不推广UEFI，就没有硬件厂商会跟进。所以，普通消费者对这个新规格所知甚少。</p>

<p>意想不到的变化，出现在2011年9月，微软毫无预兆地突然<a href="http://blogs.msdn.com/b/b8/archive/2011/09/22/protecting-the-pre-os-environment-with-uefi.aspx">宣布</a>，Windows 8将启用UEFI。</p>

<p><img src="http://image.beekka.com/blog/201301/bg2013010103.png" /></p>

<p>这本来是一件好事。但是，问题是微软感兴趣的不是整个UEFI，而是UEFI的一个子规格Secure Boot。它要强行部署Secure Boot。</p>

<p><strong>四、Secure Boot</strong></p>

<p>Secure Boot只是UEFI的一个部分。两者的关系是局部与整体的关系。</p>

<p>Secure Boot的目的，是防止恶意软件侵入。它的做法就是采用密钥。UEFI规定，主板出厂的时候，可以内置一些可靠的公钥。然后，任何想要在这块主板上加载的操作系统或者硬件驱动程序，都必须通过这些公钥的认证。也就是说，这些软件必须用对应的私钥签署过，否则主板拒绝加载。由于恶意软件不可能通过认证，因此就没有办法感染Boot。</p>

<p>这个设想是好的。但是，UEFI没规定哪些公钥是可靠的，也没规定谁负责颁发这些公钥，都留给硬件厂商自己决定。</p>

<p>现在，微软就是要求，主板厂商内置Windows 8的公钥。</p>

<p><strong>五、Windows 8</strong></p>

<p>首先明确，在不打开Secure Boot的情况下，Windows 8可以安装。这与安装以前版本的Windows没有差别。</p>

<p>但是，微软规定，所有预装Windows 8的厂商（即OEM厂商）都必须打开Secure Boot。因此，消费者购买一台预装Windows 8的台式机或笔记本，想要在上面再安装其他操作系统（包括以前版本的Windows）是不可能的，除非关闭Secure Boot，或者其他操作系统能够通过Windows 8公钥的认证。</p>

<p>如果选择关闭Secure Root，那么预装的Windows 8将无法使用，需要重新安装。</p>

<p><strong>六、实例：微星主板</strong></p>

<p>ITwire的记者Sam Varghese，做了一个<a href="http://www.itwire.com/opinion-and-analysis/open-sauce/57562-installing-windows-8-with-secure-boot/57562-installing-windows-8-with-secure-boot?start=1">实验</a>，想了解在打开Secure Boot的主板上，如何安装操作系统。</p>

<p>实验对象是微星公司<a href="http://www.msi.com/product/mb/Z77A-G41.html">Z77A-G41主板</a>。它带有Secure Boot功能，默认是关闭的。</p>

<p>第一步，开机后按Delete键，进入BIOS，选择Windows 8 Configuration选项。</p>

<p><img src="http://image.beekka.com/blog/201301/bg2013010104.jpg" /></p>

<p>第二步，选择最后一个Secure Boot选项。</p>

<p><img src="http://image.beekka.com/blog/201301/bg2013010105.jpg" /></p>

<p>第三步，打开（Enabled）Secure Boot功能，然后选择最后一个Key Management（密钥管理）选项。</p>

<p><img src="http://image.beekka.com/blog/201301/bg2013010106.jpg" /></p>

<p>第四步，输入厂商提供的公钥，也就是Windows 8的公钥（目前，任何其他操作系统都没有这类公钥。）</p>

<p><img src="http://image.beekka.com/blog/201301/bg2013010107.jpg" /></p>

<p>第五类，安装Windows 8之后，在命令行界面输入confirm-securebootuefi命令，结果为true，表示secureboot功能打开。</p>

<p><img src="http://image.beekka.com/blog/201301/bg2013010108.jpg" /></p>

<p>根据Sam Varghese测试，打开Secure Boot之后，再安装其他操作系统（包括以前版本的Windows），全部被主板拒绝。</p>

<p><strong>七、对Linux的影响</strong></p>

<p>Secure Boot规格的本意是，让操作系统厂商自行选择公钥，通过认证。但是实际上，只有微软公司才有能力，让主板厂商内置它的公钥，其他公司都不具备这种能力。</p>

<p>因此，如果要在打开Secure Boot的主板上安装Linux系统，这个系统就必须通过Windows 8的认证。</p>

<p>目前，微软公司把Windows 8的数字签名外包给了Verisign。操作系统厂商想要通过认证，就必须花99美元，向Verisign买一张数字证书，嵌入自家的操作系统。</p>

<p>最新动态是，Linux的各个发行版之中，Ubuntu已经购买了数字证书，Fedora和SUSE计划购买，其他发行版还没做出决定。</p>

<p>因此，在预装Windows 8的电脑上安装Linux（或其他操作系统）的最佳做法，就是进入BIOS，关闭Secure Boot。但是，这意味着你花钱买来的Windows 8将无法使用。</p>

<p><strong>八、为什么Windows 8的公钥不可接受？</strong></p>

<p>目前看上去，Linux购买Windows 8的数字证书，是眼下唯一可行的相对容易的解决方法。但是，这种做法不可接受。</p>

<p>首先，系统的公钥被微软控制，后果难以预料。如果微软决定更换和废除这个公钥，Linux就要被迫跟进。</p>

<p>其次，Linux的启动管理器Grub是GPL许可证，该许可证（第三版）<a href="http://www.gnu.org/licenses/gpl-faq.html#GiveUpKeys">明文禁止</a>软件使用密钥配合硬件阻止一部分用户的使用，因此要改用非GPL许可证的启动管理器。</p>

<p>再次，只有几个较大的Linux发行版才有能力购买数字证书，较小的发行版和用户自己定制的版本最终还是需要有自己的公钥。</p>

<p><strong>九、关于移动设备</strong></p>

<p>Secure Boot对移动设备的影响，比PC还要严重。</p>

<p>微软明确规定，所有PC主板必须带有关闭Secure Boot的选项。这不是因为微软的善意，而是因为如果不这样做，它一定会遭到反垄断起诉。</p>

<p>但是，在移动设备领域，微软不占优势，所以它就没有顾虑，规定所有安装Windows的移动设备的Secure Boot必须打开，而且没有关闭选项。</p>

<p>微软的平板电脑Surface RT就是一个最好的例子。它的Secure Boot是打开的，没法关闭，而且微软用了一个不同于桌面电脑Windows 8操作系统的公钥，且不提供获得数字证书的途径。因此理论上，用户<a href="http://mjg59.dreamwidth.org/21189.html">不可能</a>在Surface RT上安装其他操作系统。</p>

<p><img src="http://image.beekka.com/blog/201301/bg2013010109.jpg" /></p>

<p>还有报道称，使用Windows Phone 8操作系统的智能手机也将采用这种做法。那么，用户也就不可能在Windows Phone上安装其他操作系统了。</p>

<p><strong>十、结束语</strong></p>

<p>Secure Boot的本来用意是保证系统安全，但现在似乎成了厂商保护市场垄断、阻碍竞争一种手段。</p>

<p>除了微软公司，苹果公司也有这种倾向。在新一代的iPhone和iPad上面安装其他操作系统，似乎是不可能的。</p>

<p>自由软件基金会呼吁反Secure Boot垄断，就是基于这种考虑：用户应该拥有硬件和软件的使用自由，操作系统应该是开放的，而不是封闭的。</p>

<p>作为一种规格，自由软件基金会并不反对Secure Boot，它只是要求硬件厂商提供便利，使得用户可以更容易地安装和管理公钥，从而使用硬件平台对所有操作系统（以及设备驱动）保持开放。</p>

<p>我认为，这是完全合理的要求，对于保证用户的自由和业界的健康生态极为重要。让我们一起支持这个行动（<a href="http://www.fsf.org/campaigns/secure-boot-vs-restricted-boot/statement/">签名</a>和<a href="https://my.fsf.org/donate?pk_campaign=2012-Appeal&pk_kwd=secureboot">捐助</a>），密切关注事态下一步的发展。</p>

<p>（完）<br />
</p>]]>
        <![CDATA[<div style="color:#556677;line-height:160%;padding:0.3em 0.5em;border:1px solid #d3d3d3;margin:1em;background-color:#AAD2F0;-moz-border-radius: 10px;-webkit-border-radius:10px;border-radius: 10px;"><h3>文档信息</h3>
<ul>
<li>版权声明：自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></li>
<li>原文网址：<a href="http://www.ruanyifeng.com/blog/2013/01/secure_boot.html">http://www.ruanyifeng.com/blog/2013/01/secure_boot.html</a></li>
<li>最后修改时间：2013年3月 2日 13:45</li>
<li>付费支持：<a href="https://me.alipay.com/ruanyf" target="_blank"><img src="http://www.ruanyifeng.com/blog/images/rmb_32.png" title="人民币" alt="人民币 - 支付宝" style="border:none;vertical-align:middle;" /></a> | <a href="https://www.paypal.com/cgi-bin/webscr?cmd=_xclick&business=yifeng.ruan@gmail.com&currency_code=USD&amount=0.99&return=http://www.ruanyifeng.com/thank.html&item_name=Ruan%20YiFeng's%20Blog&undefined_quantity=1&no_note=0" target="_blank"><img src="http://www.ruanyifeng.com/blog/images/dollar_32.png"  alt="美元 - paypal" title="美元" style="border:none;vertical-align:middle;" /></a> </li>
</ul></div>]]>
        <![CDATA[<div style="color:#556677;line-height:160%;padding:0.3em 0.5em;margin:1em;-moz-border-radius: 10px;-webkit-border-radius:10px;border-radius: 10px;"><p><strong>[广告]</strong>　<a href="http://ushan.cn?utm_source=ruanyifeng.com" target="_blank" style="border:none;">优衫（Ushan）是国内顶尖的定制西服店，常年为众多政商名流、影视明星、跨国高管定制衬衫与西服。以工艺精良、用料考究、版型出色、性价比高等特点广受各界好评。</a>
</p>
</div>]]>
    </content>
</entry>

<entry>
    <title>纪录片《Minecraft：Mojang的故事》</title>
    <link rel="alternate" type="text/html" href="http://www.ruanyifeng.com/blog/2012/12/minecraft_the_story_of_mojang.html" />
    <id>tag:www.ruanyifeng.com,2012:/blog//1.1758</id>

    <published>2012-12-25T16:11:47Z</published>
    <updated>2013-02-10T17:29:35Z</updated>

    <summary>2009年，30岁的瑞典程序员Markus Persson写了一个小游戏Minecraft。...</summary>
    <author>
        <name>阮一峰</name>
        <uri>http://www.ruanyifeng.com</uri>
    </author>
    
        <category term="WWW" scheme="http://www.sixapart.com/ns/types#category" />
    
    
    <content type="html" xml:lang="en" xml:base="http://www.ruanyifeng.com/blog/">
        <![CDATA[<p>2009年，30岁的瑞典程序员<a href="http://en.wikipedia.org/wiki/Markus_Persson">Markus Persson</a>写了一个小游戏<a href="http://en.wikipedia.org/wiki/Minecraft">Minecraft</a>。</p>]]>
        <![CDATA[<p><img src="http://image.beekka.com/blog/201212/bg2012122503.jpg" /></p>
<p>这个游戏模拟了一个虚拟世界，玩家可以在里面无尽地漫游。</p>
<p><img src="http://image.beekka.com/blog/201212/bg2012122504.jpg" /></p>
<p>你看到各种别人建造的地标，也可以自己动手，随心所欲地建造自己的地标。</p>
<p><img src="http://image.beekka.com/blog/201212/bg2012122505.jpg" /></p>
<p>这个游戏大获成功，很多人试玩后都想购买。2010年9月，Markus Persson决定辞职，与朋友合资成立Mojang（瑞典语"组件"的意思）游戏公司，专职开发Minecraft。</p>
<p><img src="http://image.beekka.com/blog/201212/bg2012122506.jpg" /></p>
<p>看到这里，你可能以为，这篇文章讲的是Minecraft的故事。不是的，我其实要讲的是另一个故事。</p>
<p><img src="http://image.beekka.com/blog/201212/bg2012122501.jpg" /></p>
<p>早在2005年，美国波特兰有三个爱打游戏的年轻人。他们成立了一家名为<a href="http://www.2playerproductions.com/">2 Player Productions</a>（简称2PP）的制片工作室，专门拍摄电子游戏的制作过程。</p>
<p><img src="http://image.beekka.com/blog/201212/bg2012122507.jpg" /></p>
<p>三个成员平时都有自己的工作，只有确定题材以后，才会凑时间动工拍摄，平均每年生产一部作品。当他们看到Mojang成立的消息，意识到这可能是一个重大事件，决定跟拍Mojang的第一年。可是，他们没钱，必须找到愿意资助这个项目的人。</p>
<p>2011年2月21日，他们把这个项目放上了融资网站<a href="http://www.kickstarter.com/projects/2pp/minecraft-the-story-of-mojang">Kickstarter</a>，附上一段20分钟的<a href="http://www.gametrailers.com/video/documentary-kickstarter-minecraft/710787">试拍样片</a>，恳求资助。《项目介绍》这样写道：</p>
<blockquote>
<p>"本片将第一次深入展示，一家游戏软件公司在成立后第一年遭遇的挑战和取得的成绩。我们将分析Minecraft史无前例的成功，采访新闻记者和行业专家，访问游戏玩家。</p>
<p>您的资助将帮助我们前往瑞典和别的地方，使我们可以雇佣人手，制作特效，聘请<a href="http://c418.bandcamp.com/album/one">原创配乐</a>。"</p>
</blockquote>

<p><img src="http://image.beekka.com/blog/201212/bg2012122508.jpg" /></p>

<p>资助者获得的回报如下：</p>

<blockquote>

<table class="wikitable">
<tr>
<td style="aligh:center;">捐款金额</td>
<td style="aligh:center;">回报</td>
</tr>
<tr>
<td>1到14美元</td>
<td>数码纪念品一份，记录制作过程的blog的阅读密码。</td>
</tr>
<tr>
<td>15到29美元</td>
<td>影片的数码音轨，名字出现在片尾的致谢。</td>
</tr>
<tr>
<td>30到59美元</td>
<td>DVD套装，数码音轨，名字出现在片尾的致谢。</td>
</tr>
<tr>
<td>60到99美元</td>
<td>签名版DVD套装，配乐CD（以及非发售的隐藏音轨），定制的小玩具，名字出现在片尾致谢。</td>
</tr>
<tr>
<td>100到249美元</td>
<td>本片的大幅精美海报一张，签名版DVD套装，定制的小玩具，名字出现在片尾致谢。</td>
</tr>
<tr>
<td>250到349美元</td>
<td>本片的大幅精美海报一张，上面有Markus Persson的签名和限量版编号，配乐CD，定制的小玩具，名字出现在片尾的致谢。</td>
</tr>
<tr>
<td>350到499美元</td>
<td>片尾将展示您创造的地标（长度不超过15秒），Markus Persson签名的大幅精美海报一张，DVD签名套装，配乐CD，定制的小玩具，名字出现在片尾的致谢。</td>
</tr>
<tr>
<td>500到2499美元</td>
<td>Minecraft高级纪念品一份，Markus Persson签名的大幅精美海报一张，DVD签名套装，配乐CD，定制的小玩具，名字出现在片尾的致谢。</td>
</tr>
<tr>
<td>2500到9999美元</td>
<td>仿真的Minecraft斧子一把，高级纪念品一份，Markus Persson签名的大幅精美海报一张，DVD签名套装，配乐CD，定制的小玩具，名字出现在片尾的致谢。</td>
</tr>
<tr>
<td>10000美元及以上</td>
<td>您的名字将被列为"执行制片"，进入IMDB数据库，您还获邀来到斯德哥尔摩，与Mojang团队共度一天（机票和食宿自理），以及前述的所有东西。</td>
</tr>
</table>

</blockquote>

<p>原计划是4星期筹集15万美元，结果反响热烈超乎想象。2011年3月26日截止时，一共有3631人捐款，总金额21万297美元。捐款人数排在Kickstarter有史以来第三位。</p>
<p>有了这笔钱，2PP终于可以去瑞典拍摄Mojang的第一年了。事实证明，这是一个正确决定。在这一年里，Mojang取得了巨大成功，注册玩家达到1600万，游戏拷贝卖出了400万份。这是值得研究和纪念的一年。外界好奇地等待着这部纪录片，想看看这些成绩是如何取得的。</p>
<p>可是，2PP一直拖到三天前（2012年12月22日）才宣布正式上市：<a href="http://www.fangamer.net/products/minecraft-the-story-of-mojang">DVD套装</a>定价20美元，<a href="http://www.theminecraftmovie.com/">视频文件下载</a>定价8美元，<a href="http://c418.bandcamp.com/album/one">音轨</a>定价7美元。</p>

<p><img src="http://image.beekka.com/blog/201212/bg2012122509.jpg" /></p>

<p><img src="http://image.beekka.com/blog/201212/bg2012122510.jpg" /></p>

<p><img src="http://image.beekka.com/blog/201212/bg2012122511.jpg" /></p>

<p><img src="http://image.beekka.com/blog/201212/bg2012122512.jpg" /></p>

<p>令人震惊的是，第二天（12月23日）2PP就把这部电影放上了全世界最大的文件分享网站<a href="http://thepiratebay.se/torrent/7946763/Minecraft__The_Story_of_Mojang">"海盗湾"</a>，允许免费下载。说明档是这样写的：</p>
<blockquote>
<p>"我们是这部纪录片的拍摄者，希望也是它的第一个上传者。因为我们知道，它迟早会被人放到这里，那还不如我们自己来放，希望你们能够看完下面的话。</p>
<p>盗版是一种生活方式，虽然无法在短期内得到推广，还可能受到惩罚，但是我们的态度比较现实。</p>
<p>我们都看过盗版电影，有时也确实需要盗版。比如，你可能没钱买DVD，也可能想在购买前试看一下，或者因为对我们的一些做法不满，盗版表示抗议。这些理由都很好。但是如果你盗版只是为了获取视频文件，那么请考虑购买我们的无DRM的版本，下载后可用任何方式观看。</p>
<p>我们只是三个想靠自己的兴趣爱好谋生的年轻人。我们热爱电子游戏，我们渴望让电子游戏变得更真实。如果你购买我们的影片，就是在支持我们的努力。我们之所以把这部影片放到Kickstarter筹款，就是因为我们的钱不够。即使筹款成功，它还是花掉了很大很大一笔我们自己的钱，更不要提我们投入的这两年的劳动了。</p>
<p>请观看这部影片，希望你喜欢它，理解我们想做的事情。请考虑支持我们，购买8美元的下载版或者20美元的DVD。</p>
<p>我们感到很幸运，能与电子游戏行业许多杰出人物共事，拍出我们想拍的电影。请让我们继续走在这条路上，让我们拍出更好的作品。"</p>
</blockquote>
<p><img src="http://image.beekka.com/blog/201212/bg2012122502.jpg" /></p>
<p>下面就是海盗湾的磁力链接，你可以用它下载全片。在这之前，你不妨先看看2分钟预告片：<a href="http://www.youtube.com/watch?v=SXEdspVDMxw">Youtube</a> / <a href="http://v.youku.com/v_show/id_XNDg5OTEyNTQ0.html">Youku</a>。</p>
<blockquote>
<p><a href="magnet:?xt=urn:btih:41b2fd2403eba5a1dc23743fb08a15f968acc1b5&dn=Minecraft%3A+The+Story+of+Mojang&tr=udp%3A%2F%2Ftracker.openbittorrent.com%3A80&tr=udp%3A%2F%2Ftracker.publicbt.com%3A80&tr=udp%3A%2F%2Ftracker.istole.it%3A6969&tr=udp%3A%2F%2Ftracker.ccc.de%3A80">magnet:?xt=urn:btih:41b2fd2403eba5a1dc23743fb08a15f968ac
c1b5&amp;dn=Minecraft%3A+The+Story+of+Mojang&amp;tr=udp%
3A%2F%2Ftracker.openbittorrent.com%3A80&amp;tr=udp%3A%2F
%2Ftracker.publicbt.com%3A80&amp;tr=udp%3A%2F%2Ftracker.
istole.it%3A6969&amp;tr=udp%3A%2F%2Ftracker.ccc.de%3A80</a></p>
</blockquote>
<p>你下载下来的，是一个2.52GB的MOV高清文件。这是一个盗版，但是它的提供者就是版权所有人。</p>
<p>我觉得，这个事件很有启发。它提供了一个案例，让我们思考在互联网时代，内容提供商如何生存、如何应对盗版。</p>

<p>我从来不相信，强调版权保护、应用各种防盗版措施（比如DRM）是解决之道，但是确实不知道路在何方。在这方面，2PP采用网络融资、自己推动自己的盗版（gangnam style不也是这样吗），这些做法具有探索意义，令人耳目一新，而且具有可操作性，完全可以被其他项目仿效和借鉴。</p>
<p>（完）</p>]]>
        <![CDATA[<div style="color:#556677;line-height:160%;padding:0.3em 0.5em;border:1px solid #d3d3d3;margin:1em;background-color:#AAD2F0;-moz-border-radius: 10px;-webkit-border-radius:10px;border-radius: 10px;"><h3>文档信息</h3>
<ul>
<li>版权声明：自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></li>
<li>原文网址：<a href="http://www.ruanyifeng.com/blog/2012/12/minecraft_the_story_of_mojang.html">http://www.ruanyifeng.com/blog/2012/12/minecraft_the_story_of_mojang.html</a></li>
<li>最后修改时间：2013年2月11日 01:29</li>
<li>付费支持：<a href="https://me.alipay.com/ruanyf" target="_blank"><img src="http://www.ruanyifeng.com/blog/images/rmb_32.png" title="人民币" alt="人民币 - 支付宝" style="border:none;vertical-align:middle;" /></a> | <a href="https://www.paypal.com/cgi-bin/webscr?cmd=_xclick&business=yifeng.ruan@gmail.com&currency_code=USD&amount=0.99&return=http://www.ruanyifeng.com/thank.html&item_name=Ruan%20YiFeng's%20Blog&undefined_quantity=1&no_note=0" target="_blank"><img src="http://www.ruanyifeng.com/blog/images/dollar_32.png"  alt="美元 - paypal" title="美元" style="border:none;vertical-align:middle;" /></a> </li>
</ul></div>]]>
        <![CDATA[<div style="color:#556677;line-height:160%;padding:0.3em 0.5em;margin:1em;-moz-border-radius: 10px;-webkit-border-radius:10px;border-radius: 10px;"><p><strong>[广告]</strong>　<a href="http://ushan.cn?utm_source=ruanyifeng.com" target="_blank" style="border:none;">优衫（Ushan）是国内顶尖的定制西服店，常年为众多政商名流、影视明星、跨国高管定制衬衫与西服。以工艺精良、用料考究、版型出色、性价比高等特点广受各界好评。</a>
</p>
</div>]]>
    </content>
</entry>

<entry>
    <title>Javascript异步编程的4种方法</title>
    <link rel="alternate" type="text/html" href="http://www.ruanyifeng.com/blog/2012/12/asynchronous＿javascript.html" />
    <id>tag:www.ruanyifeng.com,2012:/blog//1.1756</id>

    <published>2012-12-21T08:27:34Z</published>
    <updated>2013-03-09T07:52:39Z</updated>

    <summary>你可能知道，Javascript语言的执行环境是&quot;单线程&quot;（single thread）。...</summary>
    <author>
        <name>阮一峰</name>
        <uri>http://www.ruanyifeng.com</uri>
    </author>
    
        <category term="JavaScript" scheme="http://www.sixapart.com/ns/types#category" />
    
    
    <content type="html" xml:lang="en" xml:base="http://www.ruanyifeng.com/blog/">
        <![CDATA[<p>你可能知道，Javascript语言的执行环境是"单线程"（single thread）。</p>]]>
        <![CDATA[<p>所谓"单线程"，就是指一次只能完成一件任务。如果有多个任务，就必须排队，前面一个任务完成，再执行后面一个任务，以此类推。</p>

<p><img src="http://image.beekka.com/blog/201212/bg2012122101.jpg" /></p>

<p>这种模式的好处是实现起来比较简单，执行环境相对单纯；坏处是只要有一个任务耗时很长，后面的任务都必须排队等着，会拖延整个程序的执行。常见的浏览器无响应（假死），往往就是因为某一段Javascript代码长时间运行（比如死循环），导致整个页面卡在这个地方，其他任务无法执行。</p>

<p>为了解决这个问题，Javascript语言将任务的执行模式分成两种：同步（Synchronous）和异步（Asynchronous）。</p>

<p>"同步模式"就是上一段的模式，后一个任务等待前一个任务结束，然后再执行，程序的执行顺序与任务的排列顺序是一致的、同步的；"异步模式"则完全不同，每一个任务有一个或多个回调函数（callback），前一个任务结束后，不是执行后一个任务，而是执行回调函数，后一个任务则是不等前一个任务结束就执行，所以程序的执行顺序与任务的排列顺序是不一致的、异步的。</p>

<p><img src="http://image.beekka.com/blog/201212/bg2012122102.png" style="border:none;" /></p>

<p>"异步模式"非常重要。在浏览器端，耗时很长的操作都应该异步执行，避免浏览器失去响应，最好的例子就是Ajax操作。在服务器端，"异步模式"甚至是唯一的模式，因为执行环境是单线程的，如果允许同步执行所有http请求，服务器性能会急剧下降，很快就会失去响应。</p>

<p>本文总结了"异步模式"编程的4种方法，理解它们可以让你写出结构更合理、性能更出色、维护更方便的Javascript程序。</p>

<p><strong>一、回调函数</strong></p>

<p>这是异步编程最基本的方法。</p>

<p>假定有两个函数f1和f2，后者等待前者的执行结果。</p>

<blockquote>

<p>　　f1();</p>

<p>　　f2();</p>

</blockquote>

<p>如果f1是一个很耗时的任务，可以考虑改写f1，把f2写成f1的回调函数。</p>

<blockquote>

<p>　　function f1(callback){</p>

<p>　　　　setTimeout(function () {</p>

<p>　　　　　　// f1的任务代码</p>

<p>　　　　　　callback();</p>

<p>　　　　}, 1000);</p>

<p>　　}</p>

</blockquote>

<p>执行代码就变成下面这样：</p>

<blockquote>

<p>　　f1(f2);</p>

</blockquote>

<p>采用这种方式，我们把同步操作变成了异步操作，f1不会堵塞程序运行，相当于先执行程序的主要逻辑，将耗时的操作推迟执行。</p>

<p>回调函数的优点是简单、容易理解和部署，缺点是不利于代码的阅读和维护，各个部分之间高度<a href="http://en.wikipedia.org/wiki/Coupling_(computer_programming)">耦合</a>（Coupling），流程会很混乱，而且每个任务只能指定一个回调函数。</p>

<p><strong>二、事件监听</strong></p>

<p>另一种思路是采用事件驱动模式。任务的执行不取决于代码的顺序，而取决于某个事件是否发生。</p>

<p>还是以f1和f2为例。首先，为f1绑定一个事件（这里采用的jQuery的<a href="http://api.jquery.com/on/">写法</a>）。</p>

<blockquote>

<p>　　f1.on('done', f2);</p>

</blockquote>

<p>上面这行代码的意思是，当f1发生done事件，就执行f2。然后，对f1进行改写：</p>

<blockquote>

<p>　　function f1(){</p>

<p>　　　　setTimeout(function () {</p>

<p>　　　　　　// f1的任务代码</p>

<p>　　　　　　<strong>f1.trigger('done');</strong></p>

<p>　　　　}, 1000);</p>

<p>　　}</p>

</blockquote>

<p>f1.trigger('done')表示，执行完成后，立即触发done事件，从而开始执行f2。</p>

<p>这种方法的优点是比较容易理解，可以绑定多个事件，每个事件可以指定多个回调函数，而且可以<a href="http://en.wikipedia.org/wiki/Decoupling">"去耦合"</a>（Decoupling），有利于实现<a href="http://www.ruanyifeng.com/blog/2012/10/javascript_module.html">模块化</a>。缺点是整个程序都要变成事件驱动型，运行流程会变得很不清晰。</p>

<p><strong>三、发布/订阅</strong></p>

<p>上一节的"事件"，完全可以理解成"信号"。</p>

<p>我们假定，存在一个"信号中心"，某个任务执行完成，就向信号中心"发布"（publish）一个信号，其他任务可以向信号中心"订阅"（subscribe）这个信号，从而知道什么时候自己可以开始执行。这就叫做<a href="http://en.wikipedia.org/wiki/Publish-subscribe_pattern">"发布/订阅模式"</a>（publish-subscribe pattern），又称<a href="http://en.wikipedia.org/wiki/Observer_pattern">"观察者模式"</a>（observer pattern）。</p>

<p>这个模式有多种<a href="http://msdn.microsoft.com/en-us/magazine/hh201955.aspx">实现</a>，下面采用的是Ben Alman的<a href="https://gist.github.com/661855">Tiny Pub/Sub</a>，这是jQuery的一个插件。</p>

<p>首先，f2向"信号中心"jQuery订阅"done"信号。</p>

<blockquote>

<p>　　jQuery.subscribe("done", f2);</p>

</blockquote>

<p>然后，f1进行如下改写：</p>

<blockquote>

<p>　　function f1(){</p>

<p>　　　　setTimeout(function () {</p>

<p>　　　　　　// f1的任务代码</p>

<p>　　　　　　<strong>jQuery.publish("done");</strong></p>

<p>　　　　}, 1000);</p>

<p>　　}</p>

</blockquote>

<p>jQuery.publish("done")的意思是，f1执行完成后，向"信号中心"jQuery发布"done"信号，从而引发f2的执行。</p>

<p>此外，f2完成执行后，也可以取消订阅（unsubscribe）。</p>

<blockquote>

<p>　　jQuery.unsubscribe("done", f2);</p>

</blockquote>

<p>这种方法的性质与"事件监听"类似，但是明显优于后者。因为我们可以通过查看"消息中心"，了解存在多少信号、每个信号有多少订阅者，从而监控程序的运行。</p>

<p><strong>四、Promises对象</strong></p>

<p>Promises对象是CommonJS工作组提出的一种规范，目的是为异步编程提供<a href="http://wiki.commonjs.org/wiki/Promises/A">统一接口</a>。</p>

<p>简单说，它的思想是，每一个异步任务返回一个Promise对象，该对象有一个then方法，允许指定回调函数。比如，f1的回调函数f2,可以写成：</p>

<blockquote>

<p>　　f1().then(f2);</p>

</blockquote>

<p>f1要进行如下改写（这里使用的是jQuery的<a href="http://www.ruanyifeng.com/blog/2011/08/a_detailed_explanation_of_jquery_deferred_object.html">实现</a>）：</p>

<blockquote>

<p>　　function f1(){</p>

<p>　　　　var dfd = $.Deferred();</p>

<p>　　　　setTimeout(function () {</p>

<p>　　　　　　// f1的任务代码</p>

<p>　　　　　　dfd.resolve();</p>

<p>　　　　}, 500);</p>

<p>　　　　<strong>return dfd.promise;</strong></p>

<p>　　}</p>

</blockquote>

<p>这样写的优点在于，回调函数变成了链式写法，程序的流程可以看得很清楚，而且有一整套的<a href="http://api.jquery.com/category/deferred-object/">配套方法</a>，可以实现许多强大的功能。</p>

<p>比如，指定多个回调函数：</p>

<blockquote>

<p>　　f1().then(f2).then(f3);</p>

</blockquote>

<p>再比如，指定发生错误时的回调函数：</p>

<blockquote>

<p>　　f1().then(f2).fail(f3);</p>

</blockquote>

<p>而且，它还有一个前面三种方法都没有的好处：如果一个任务已经完成，再添加回调函数，该回调函数会立即执行。所以，你不用担心是否错过了某个事件或信号。这种方法的缺点就是编写和理解，都相对比较难。</p>

<p><strong>五、参考链接</strong></p>

<p>　　* <a href="http://sporto.github.com/blog/2012/12/09/callbacks-listeners-promises/">Asynchronous JS: Callbacks, Listeners, Control Flow Libs and Promises</a></p>

<p>（完）</p>]]>
        <![CDATA[<div style="color:#556677;line-height:160%;padding:0.3em 0.5em;border:1px solid #d3d3d3;margin:1em;background-color:#AAD2F0;-moz-border-radius: 10px;-webkit-border-radius:10px;border-radius: 10px;"><h3>文档信息</h3>
<ul>
<li>版权声明：自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></li>
<li>原文网址：<a href="http://www.ruanyifeng.com/blog/2012/12/asynchronous＿javascript.html">http://www.ruanyifeng.com/blog/2012/12/asynchronous＿javascript.html</a></li>
<li>最后修改时间：2013年3月 9日 15:52</li>
<li>付费支持：<a href="https://me.alipay.com/ruanyf" target="_blank"><img src="http://www.ruanyifeng.com/blog/images/rmb_32.png" title="人民币" alt="人民币 - 支付宝" style="border:none;vertical-align:middle;" /></a> | <a href="https://www.paypal.com/cgi-bin/webscr?cmd=_xclick&business=yifeng.ruan@gmail.com&currency_code=USD&amount=0.99&return=http://www.ruanyifeng.com/thank.html&item_name=Ruan%20YiFeng's%20Blog&undefined_quantity=1&no_note=0" target="_blank"><img src="http://www.ruanyifeng.com/blog/images/dollar_32.png"  alt="美元 - paypal" title="美元" style="border:none;vertical-align:middle;" /></a> </li>
</ul></div>]]>
        <![CDATA[<div style="color:#556677;line-height:160%;padding:0.3em 0.5em;margin:1em;-moz-border-radius: 10px;-webkit-border-radius:10px;border-radius: 10px;"><p><strong>[广告]</strong>　<a href="http://ushan.cn?utm_source=ruanyifeng.com" target="_blank" style="border:none;">优衫（Ushan）是国内顶尖的定制西服店，常年为众多政商名流、影视明星、跨国高管定制衬衫与西服。以工艺精良、用料考究、版型出色、性价比高等特点广受各界好评。</a>
</p>
</div>]]>
    </content>
</entry>

<entry>
    <title>奥巴马筹款网站的制作过程</title>
    <link rel="alternate" type="text/html" href="http://www.ruanyifeng.com/blog/2012/12/obama_fundraising_website.html" />
    <id>tag:www.ruanyifeng.com,2012:/blog//1.1755</id>

    <published>2012-12-14T08:19:00Z</published>
    <updated>2013-02-21T09:55:50Z</updated>

    <summary>1. Kyle Rush是一个网站工程师。...</summary>
    <author>
        <name>阮一峰</name>
        <uri>http://www.ruanyifeng.com</uri>
    </author>
    
        <category term="IT" scheme="http://www.sixapart.com/ns/types#category" />
    
    
    <content type="html" xml:lang="en" xml:base="http://www.ruanyifeng.com/blog/">
        <![CDATA[<p>1.</p>

<p>Kyle Rush是一个网站工程师。</p>]]>
        <![CDATA[<p><img src="http://image.beekka.com/blog/201212/bg2012121401.jpg" /></p>

<p>2011年6月，他加入<a href="http://www.barackobama.com/">BarackObama.com</a>，负责设计2012美国大选的奥巴马官网。</p>

<p><a href="http://web.archive.org/web/20110607225657/http://www.barackobama.com//im-in-splash-2"><img src="http://image.beekka.com/blog/201212/bg2012121402.jpg" /></a></p>

<p>（图为2011年6月的奥巴马官网）</p>

<p>除了宣传，官网的主要目的就是筹款。</p>

<p>上一次大选，奥巴马筹到了6.9亿美元。这是一个很大的数字，但由于过去4年美国经济一直没有起色，本次大选势必要投入更多的资金，团队内部估计资金需求将达到创纪录的10亿美元。</p>

<p>一个筹集10亿美元的网站，历史上从来没有过。Kyle Rush不知道自己能否做到，但是他很清楚，如果筹不到钱，奥巴马没法赢得大选。</p>

<p><img src="http://image.beekka.com/blog/201212/bg2012121403.jpg" /></p>

<p>2.</p>

<p>2012年美国大选现在已经结束了，奥巴马有惊无险地击败了罗姆尼。他最终筹到了11亿美元，成为历史上筹款金额最高（也是花钱最多）的总统候选人。（排在第二位的就是罗姆尼，他也筹到了10亿美元。）</p>

<p><img src="http://image.beekka.com/blog/201212/bg2012121404.png" /></p>

<p>这11亿美元之中，线下筹集了4.1亿，线上筹集了6.9亿。单单BarackObama.com一个网站，就创造了2.5亿美元的捐款。</p>

<p>在6个月的时间里，BarackObama.com共有</p>

<blockquote>

<p>　　* 17,807,917个访问者，81,548,259次页面访问</p>

<p>　　* 4,276,463次捐款</p>

<p>　　* 捐款转化率24%（每四个访问者，就有一人会捐款）</p>

</blockquote>

<p>这样辉煌的成绩，是如何取得的？</p>

<p>3.</p>

<p>制作一个超大流量的、体验良好的、能够说服人们捐款、并能安全快速处理这些捐款的网站、绝非易事。</p>

<p>最近，Kyle Rush写了一篇<a href="http://kylerush.net/blog/meet-the-obama-campaigns-250-million-fundraising-platform/">文章</a>，披露了许多内幕，从技术角度总结了BarackObama.com的制作心得。下面，我们就来看看奥巴马的技术团队是怎么做到的。</p>

<p><img src="http://image.beekka.com/blog/201212/bg2012121405.jpg" /></p>

<p>（图为2012年5月的奥巴马官网）</p>

<p>网站的制作班子，从2011年下半开始组建，Kyle Rush是第一个加入的前端工程师，负责网页的外观和用户体验。</p>

<p>一开始，网站放在团队自购的服务器上，运行和捐款都还算平稳。但是，随着竞争不断加剧，局势变得令人担忧了。到了2012年5月，罗姆尼当月的筹款金额第一次<a href="http://delicious.com/redirect?url=http%3A//news.xinhuanet.com/world/2012-06/09/c_123257721.htm">超过</a>了奥巴马。</p>

<p>竞选总部决定，网站必须改版，尽一切可能争取捐款。于是，技术团队开始大规模的扩充，全职的前端工程师从1个人扩充到了14个人，其中6人专门负责制作筹款页面。</p>

<p>4.</p>

<p>技术团队做出的第一个决定是，使用静态网站生成器<a href="http://jekyllrb.com/">Jekyll</a>，用静态网页取代动态网页，加快网页打开速度。网站的打开应该<a href="http://www.stevesouders.com/blog/2010/05/07/wpo-web-performance-optimization/">越快越好</a>。有研究称，打开速度每慢100毫秒，Amazon的销售额就下降1%。</p>

<p>第二个决定是，将全部网页放上CDN，使用的服务商是<a href="http://www.akamai.com/">Akamai</a>。它是世界最大的CDN供应商，共部署了50000多台服务器，美国各地都能获得理想的访问速度。奥巴马芝加哥竞选总部，可以在20毫秒内载入官网的HTML网页。</p>

<p>第三个决定是，将捐款的后台做成<a href="http://tools.bluestatedigital.com/pages/quick-donate">API调用</a>。这是因为有23%的访问者使用移动设备，所以必须部署多个前端（Web端和移动端）。使用API，可以让不同前端以相同方式与后台通信，彼此之间用JSON格式传递信息。</p>

<p>第四个决定是，后台用PHP语言开发，放在Amazon的EC2平台上。</p>

<p>第五个决定是，为了避免宕机，开发两个后台。一旦一个系统停止工作，立刻自动切换到另一个。这点很重要，因为宕机不仅影响士气，而且经济损失巨大。因为捐款每分钟都在涌入，最高记录是一小时300万美元，你不能让它停下来。</p>

<p>5.</p>

<p>新网站初步完成后，使用<a href="http://www.webpagetest.org/">webpagetest.org</a>进行测试，结果令人鼓舞。</p>

<p><img src="http://image.beekka.com/blog/201212/bg2012121406.png" /></p>

<p>原版页面4秒钟后还没载入，新版只用1秒就可以看到。整个平台的访问速度上升了60%，捐款转化率增加了14%。</p>

<p>接下来，就是微调页面的各种细节，一共进行了240次<a href="http://en.wikipedia.org/wiki/A/B_testing">a/b测试</a>，也就是说，至少迭代了240个版本。</p>

<p>调整后的页面，视觉效果和用户体验都有了巨大的提升（点击看大图），捐款转化率因此又提高了49%。。</p>

<p><a href="http://image.beekka.com/blog/201212/bg2012121408.png"><img src="http://image.beekka.com/blog/201212/bg2012121407.jpg" /></a></p>

<p>随着奥巴马的当选，BarackObama.com共进行了1101次前端部署。</p>

<p>6.</p>

<p>事实证明，整个开发方案非常成功，顺利完成筹款任务，没有一分钟宕机。</p>

<p>Kyle Rush感到有必要总结，留下记录。除了上面的开发过程，他还提到前端团队使用的工具：版本控制<a href="https://github.com/">Github</a> ，a/b测试管理<a href="https://www.optimizely.com/">Optimizely</a>，代码编译<a href="http://incident57.com/codekit/">CodeKit</a>。</p>

<p>Kyle Rush最后总结说：</p>

<blockquote>

<p>"我百分之百肯定，这是我经历过的最好的开发环境。我们不断调整，捐款转化率的提高令人难以置信。整个团队感到无比满足。但是，最高兴的还是看到，2013年1月21日巴拉克·奥巴马依然是美国总统！"</p>

</blockquote>

<p>（完）<br />
</p>]]>
        <![CDATA[<div style="color:#556677;line-height:160%;padding:0.3em 0.5em;border:1px solid #d3d3d3;margin:1em;background-color:#AAD2F0;-moz-border-radius: 10px;-webkit-border-radius:10px;border-radius: 10px;"><h3>文档信息</h3>
<ul>
<li>版权声明：自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></li>
<li>原文网址：<a href="http://www.ruanyifeng.com/blog/2012/12/obama_fundraising_website.html">http://www.ruanyifeng.com/blog/2012/12/obama_fundraising_website.html</a></li>
<li>最后修改时间：2013年2月21日 17:55</li>
<li>付费支持：<a href="https://me.alipay.com/ruanyf" target="_blank"><img src="http://www.ruanyifeng.com/blog/images/rmb_32.png" title="人民币" alt="人民币 - 支付宝" style="border:none;vertical-align:middle;" /></a> | <a href="https://www.paypal.com/cgi-bin/webscr?cmd=_xclick&business=yifeng.ruan@gmail.com&currency_code=USD&amount=0.99&return=http://www.ruanyifeng.com/thank.html&item_name=Ruan%20YiFeng's%20Blog&undefined_quantity=1&no_note=0" target="_blank"><img src="http://www.ruanyifeng.com/blog/images/dollar_32.png"  alt="美元 - paypal" title="美元" style="border:none;vertical-align:middle;" /></a> </li>
</ul></div>]]>
        <![CDATA[<div style="color:#556677;line-height:160%;padding:0.3em 0.5em;margin:1em;-moz-border-radius: 10px;-webkit-border-radius:10px;border-radius: 10px;"><p><strong>[广告]</strong>　<a href="http://ushan.cn?utm_source=ruanyifeng.com" target="_blank" style="border:none;">优衫（Ushan）是国内顶尖的定制西服店，常年为众多政商名流、影视明星、跨国高管定制衬衫与西服。以工艺精良、用料考究、版型出色、性价比高等特点广受各界好评。</a>
</p>
</div>]]>
    </content>
</entry>

<entry>
    <title>为什么数码相机可以拍出彩色照片？</title>
    <link rel="alternate" type="text/html" href="http://www.ruanyifeng.com/blog/2012/12/bayer_filter.html" />
    <id>tag:www.ruanyifeng.com,2012:/blog//1.1754</id>

    <published>2012-12-06T07:24:59Z</published>
    <updated>2013-01-03T19:10:02Z</updated>

    <summary>上个月（11月13日），83岁的柯达公司退休工程师布赖斯·拜尔（Bryce Bayer）去世。...</summary>
    <author>
        <name>阮一峰</name>
        <uri>http://www.ruanyifeng.com</uri>
    </author>
    
        <category term="IT" scheme="http://www.sixapart.com/ns/types#category" />
    
    
    <content type="html" xml:lang="en" xml:base="http://www.ruanyifeng.com/blog/">
        <![CDATA[<p>上个月（11月13日），83岁的柯达公司退休工程师<a href="http://www.nytimes.com/2012/11/29/business/bryce-bayer-inventor-of-a-filter-to-make-color-digital-pictures-dies-at-83.html">布赖斯·拜尔</a>（Bryce Bayer）去世。</p>]]>
        <![CDATA[<p><img src="http://image.beekka.com/blog/201212/bg2012120600.jpg" /></p>

<p>一家国内<a href="http://magazine.caixin.com/">杂志</a>邀请我写纪念文章，回顾他对数码摄影的巨大贡献。</p>

<p>我看了一些材料，觉得这个题材很有意思，涉及数码相机的成像原理，使我对数字图像技术有了新的认识。但是，由于体例限制，杂志不允许我插入彩图。</p>

<p>下面，我把我的那篇文章配上图片，解释彩色数码照片是怎么拍出来的。</p>

<p>1.</p>

<p><img src="http://image.beekka.com/blog/201212/bg2012120601.jpg" /></p>

<p>为了更好地理解原理，让我们从照片的起源讲起。1825年，法国人<a href="http://zh.wikipedia.org/wiki/%E7%B4%84%E7%91%9F%E5%A4%AB%C2%B7%E5%B0%BC%E5%A1%9E%E7%A6%8F%E7%88%BE%C2%B7%E6%B6%85%E6%99%AE%E6%96%AF">涅普斯</a>（Joseph Nicéphore Nièpce），拍出历史上第一张照片。</p>

<p>2.</p>

<p><img src="http://image.beekka.com/blog/201212/bg2012120602.jpg" /></p>

<p>他采用的感光剂是<a href="http://zh.wikipedia.org/wiki/%E6%B0%AF%E5%8C%96%E9%93%B6">氯化银</a>（silver chloride）。当光线照射氯化银，后者会分解成纯银和氯气，银金属颗粒呈现黑色。因此，底片颜色越深代表光线越强，颜色越浅代表光线越弱。黑白照片就是这样拍出来。</p>

<p>3.</p>

<p><img src="http://image.beekka.com/blog/201212/bg2012120603.gif" /></p>

<p>19世纪中期，人们发现，人眼的圆锥细胞对三种颜色----红、绿、蓝----特别敏感。伟大的英国物理学家麦克斯韦因此假设，红绿蓝作为基色，可以拍出彩色照片。</p>

<p>4.</p>

<p><img src="http://image.beekka.com/blog/201212/bg2012120604.jpg" /></p>

<p>1861年，在麦克斯韦的指导下，人类的第一张彩色照片诞生了。</p>

<p>采用的方法是在镜头前，分别用红丝带、绿丝带、蓝丝带过滤光线，曝光形成三张底片，然后用三部放映机向同一处投影这三张底片，每部放映机的镜头前都拧上对应颜色的镜头，它们的合成效果就是一张彩照。</p>

<p>5.</p>

<p><img src="http://image.beekka.com/blog/201212/bg2012120605.png" /></p>

<p>真正意义上的彩色胶卷，1933年诞生于柯达公司，底片之上依次有三个感光层，分别对红、绿、蓝三种颜色进行曝光，最后叠加形成一张彩色底片。</p>

<p>6.</p>

<p><img src="http://image.beekka.com/blog/201212/bg2012120606.jpg" /></p>

<p>二战后，计算机诞生，科学家发现图像可以用数字形式表示。如果将光信号转变成电信号，就可以直接拍出数码照片。这意味着，照相机不再需要胶卷，而是需要一个<a href="http://en.wikipedia.org/wiki/Image_sensor">图像传感器</a>（image sensor）。</p>

<p>7.</p>

<p><img src="http://image.beekka.com/blog/201212/bg2012120607.png" /></p>

<p>图像传感器将光线转化成电流，光线越亮，电流的数值就越大；光线越暗，电流的数值就越小。所以，如果用0到255的范围，表示光线的亮度，最亮的光线是白光，数值是十六进制的FF，最暗的光线是黑光（没有光），数值是十六进制的00。</p>

<p>8.</p>

<p><img src="http://image.beekka.com/blog/201212/bg2012120608.png" /></p>

<p>图像传感器的表面，分成若干个捕捉点，每个点都会产生一个数值，表示该点感受到的光线亮度，这就叫做"像素"。像素越多，图像细节就越丰富。如果一台相机的像素是1600x1200，就说明图像传感器横向有1600个捕捉点，纵向有1200个，合计192万个。</p>

<p>9.</p>

<p><img src="http://image.beekka.com/blog/201212/bg2012120609.png" /></p>

<p>但是，图像传感器有一个很严重的缺陷：它只能感受光的强弱，无法感受光的波长。由于光的颜色由波长决定，所以图像传播器无法记录颜色，也就是说，它只能拍黑白照片，这肯定是不能接受的。</p>

<p>10.</p>

<p><img src="http://image.beekka.com/blog/201212/bg2012120610.png" /></p>

<p>一种解决方案是照相机内置三个图像传感器，分别记录红、绿、蓝三种颜色，然后再将这三个值合并。这种方法能产生最准确的颜色信息，但是成本太高，无法投入实用。</p>

<p>11.</p>

<p><img src="http://image.beekka.com/blog/201212/bg2012120611.png" /></p>

<p>1974年，柯达公司的工程师布赖斯·拜尔提出了一个全新方案，只用一块图像传感器，就解决了颜色的识别。他的做法是在图像传感器前面，设置一个<a href="http://en.wikipedia.org/wiki/Color_filter_array">滤光层</a>（Color filter array），上面布满了滤光点，与下层的像素一一对应。也就是说，如果传感器是1600x1200像素，那么它的上层就有1600x1200个滤光点。</p>

<p>12.</p>

<p><img src="http://image.beekka.com/blog/201212/bg2012120612.png" /></p>

<p>每个滤光点只能通过红、绿、蓝之中的一种颜色，这意味着在它下层的像素点只可能有四种颜色：红、绿、蓝、黑（表示没有任何光通过）。</p>

<p>13.</p>

<p><img src="http://image.beekka.com/blog/201212/bg2012120613.png" /></p>

<p>不同颜色的滤光点的排列是有规律的：每个绿点的四周，分布着2个红点、2个蓝点、4个绿点。这意味着，整体上，绿点的数量是其他两种颜色点的两倍。这是因为研究显示人眼对绿色最敏感，所以滤光层的绿点最多。</p>

<p>14.</p>

<p><img src="http://image.beekka.com/blog/201212/bg2012120614.png" /></p>

<p>接下来的问题就是，如果一个像素只可能有四种颜色，那么怎么能拍出彩色照片呢？这就是布赖斯·拜尔聪明的地方，前面说了，每个滤光点周围有规律地分布其他颜色的滤光点，那么就有可能结合它们的值，判断出光线本来的颜色。以黄光为例，它由红光和绿光混合而成，那么通过滤光层以后，红点和绿点下面的像素都会有值，但是蓝点下面的像素没有值，因此看一个像素周围的颜色分布----有红色和绿色，但是没有蓝色----就可以推测出来这个像素点的本来颜色应该是黄色。</p>

<p>15.</p>

<p><img src="http://image.beekka.com/blog/201212/bg2012120615.jpg" /></p>

<p>这种计算颜色的方法，就叫做<a href="http://en.wikipedia.org/wiki/Demosaicing">"去马赛克"</a>（demosaicing）。上图的下半部分是图像传感器生成的"马赛克"图像，所有的像素只有红、绿、蓝、黑四种颜色；上半部分是"去马赛克"后的效果，这是用算法处理的结果。</p>

<p>16.</p>

<p><img src="http://image.beekka.com/blog/201212/bg2012120616.png" /></p>

<p>虽然，每个像素的颜色都是算出来的，并不是真正的值，但是由于计算的结果相当准确，因此这种做法得到广泛应用。目前，绝大部分的数码相机都采用它，来生成彩色数码照片。高级的数码相机，还提供未经算法处理的原始马赛克图像，这就是<a href="http://en.wikipedia.org/wiki/Raw_image_format">raw格式</a>（raw image format）。</p>

<p>为了纪念发明者布赖斯·拜尔，它被称作"拜尔模式"或<a href="http://en.wikipedia.org/wiki/Bayer_filter">"拜尔滤光法"</a> （Bayer filter）。</p>

<p>（完）</p>]]>
        <![CDATA[<div style="color:#556677;line-height:160%;padding:0.3em 0.5em;border:1px solid #d3d3d3;margin:1em;background-color:#AAD2F0;-moz-border-radius: 10px;-webkit-border-radius:10px;border-radius: 10px;"><h3>文档信息</h3>
<ul>
<li>版权声明：自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></li>
<li>原文网址：<a href="http://www.ruanyifeng.com/blog/2012/12/bayer_filter.html">http://www.ruanyifeng.com/blog/2012/12/bayer_filter.html</a></li>
<li>最后修改时间：2013年1月 4日 03:10</li>
<li>付费支持：<a href="https://me.alipay.com/ruanyf" target="_blank"><img src="http://www.ruanyifeng.com/blog/images/rmb_32.png" title="人民币" alt="人民币 - 支付宝" style="border:none;vertical-align:middle;" /></a> | <a href="https://www.paypal.com/cgi-bin/webscr?cmd=_xclick&business=yifeng.ruan@gmail.com&currency_code=USD&amount=0.99&return=http://www.ruanyifeng.com/thank.html&item_name=Ruan%20YiFeng's%20Blog&undefined_quantity=1&no_note=0" target="_blank"><img src="http://www.ruanyifeng.com/blog/images/dollar_32.png"  alt="美元 - paypal" title="美元" style="border:none;vertical-align:middle;" /></a> </li>
</ul></div>]]>
        <![CDATA[<div style="color:#556677;line-height:160%;padding:0.3em 0.5em;margin:1em;-moz-border-radius: 10px;-webkit-border-radius:10px;border-radius: 10px;"><p><strong>[广告]</strong>　<a href="http://ushan.cn?utm_source=ruanyifeng.com" target="_blank" style="border:none;">优衫（Ushan）是国内顶尖的定制西服店，常年为众多政商名流、影视明星、跨国高管定制衬衫与西服。以工艺精良、用料考究、版型出色、性价比高等特点广受各界好评。</a>
</p>
</div>]]>
    </content>
</entry>

</feed>
